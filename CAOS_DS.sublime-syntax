%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
file_extensions:
  - cos
name: 'Docking Station'

first_line_match: '\*\s*([Cc][Aa]?[Oo][Ss]\s*|[@]?[Vv][Aa][Rr][Ii][Aa][Nn][Tt])(\(\s*[Dd][Ss]\s*\)|\s*[:]\s*[Dd][Ss])'
scope: source.caos.ds
contexts:
  main:

    - match: '\s*\*.*$'
      scope: comment.line.caos
    - match: '([_][Cc][Dd][_])\s*([Ee][Jj][Cc][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Open the CD tray.'
      scope: entity.name.function.caos

    - match: '([_][Cc][Dd][_])\s*([Ii][Nn][Ii][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Let the game know that you wish to use the cd player. This will shut down all in game sounds and\nmusic as the mixer is needed to gauge the frequency spectrum.'
      scope: entity.name.function.caos

    - match: '([_][Cc][Dd][_])\s*([Pp][Aa][Ww][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Pause the CD player if the parameter is greater than zero, to continue playing a previous paused\ntrack set the parameter to 1.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([_][Cc][Dd][_])\s*([Pp][Ll][Aa][Yy])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Tell the CD Player to play the given track.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([_][Cc][Dd][_])\s*([Ss][Hh][Uu][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Tell the game that you have finished with the cd player. This will reinstate the in game sounds and\nmusic.'
      scope: entity.name.function.caos

    - match: '([_][Cc][Dd][_])\s*([Ss][Tt][Oo][Pp])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Stop the cd player.'
      scope: entity.name.function.caos

    - match: '(\b([Aa][Bb][Ss][Vv])\b)'
      comment: 'Set a variable to its absolute value, so if var is negative var = 0 - {var}, otherwise {var} is\nleft alone.'
      scope: entity.name.function.caos
      push: [lvalue]

    - match: '(\b([Aa][Cc][Cc][Gg])\b)'
      comment: 'Set acceleration due to gravity in pixels per tick squared.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Dd][Dd][Bb])\b)'
      comment: 'Add a new background to the given metaroom. Use [BKGD] to change the current displayed background.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Aa][Dd][Dd][Ss])\b)'
      comment: 'Concatenates two strings, so {var} = {var} + {append}.'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Aa][Dd][Dd][Vv])\b)'
      comment: 'Adds two integers or floats, so {var} = {var} + {sum}.'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Aa][Dd][Ii][Nn])\b)'
      comment: 'Add an instinct to the creature''s brain queue. (The instinct is not processed immediately).\nExample: ADIN 3 4 0.5 7 encourages (by a factor of 0.5) the creature to do action 3 on category 4\nwhen drive 7 is high.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Aa][Dd][Mm][Pp])\b)'
      comment: 'Damp angular velocity by this much each tick. The value is from 0.0 to 1.0 where 0.0 means no\ndamping, 1.0 maximum.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Ee][Rr][Oo])\b)'
      comment: 'Set aerodynamic factor as a percentage. The velocity is reduced by this factor each tick.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Gg][Ee][Ss])\b)'
      comment: 'Forces a creature to age the given number of times. See also [CAGE].'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Ll][Pp][Hh])\b)'
      comment: 'The agent will be drawn alpha blended against the background by the given value - from 256 for\ninvisible to 0 for completely solid. For compound agents set the [PART] to affect a particular part\nor to -1 to affect all parts. The second parameter switches alpha blending on (1) or off (0). Alpha\ngraphics are drawn much slower, so use sparingly and turn it off completely rather than using an\nintensity value of 0 or 256. At the moment alpha channels only work on compressed, non-mirrored,\nnon-zoomed sprites.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Aa][Ll][Tt][Rr])\b)'
      comment: 'Directly adjusts the level of a CA in a room. Specify an identifier of -1 to use the room of the\nmidpoint of the target agent.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Aa][Nn][Dd][Vv])\b)'
      comment: '{value1} = {value1} & {value2}'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Aa][Nn][Ii][Mm])\b)'
      comment: 'Specify a list of [POSE]s such as [1 2 3] to animate the current agent/part. Put 255 at the end to\ncontinually loop. The first number after the 255 is an index into the animation string where the\nlooping restarts from - this defaults to 0 if not specified. e.g. [0 1 2 10 11 12 255 3] would loop\njust the 10, 11, 12 section.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Nn][Mm][Ss])\b)'
      comment: 'This is like [ANIM], only it reads the poses from a string such as "3 4 5 255". Use this when you\nneed to dynamically construct animations. Use ANIM in general as it is quicker to execute, although\nthey are the same speed once the animation is underway.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Pp][Pp][Rr])\b)'
      comment: 'Approach [_IT_]\nChose a walking gait according to chemo-receptors, then start walking towards\n[_IT_].\nContinue with next instruction when you are within reach'
      scope: entity.name.function.caos

    - match: '(\b([Aa][Pp][Rr][Oo])\b)'
      comment: 'Lists all command names whose help contains the text.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Ss][Ll][Pp])\b)'
      comment: 'Sets/returns whether a creature is asleep. When asleep the eyes close and the creature becomes\ninsensible to some stimuli. A change of action automatically wakes creature up again.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Tt][Tt][Rr])\b)'
      comment: 'Set attributes of target. Sum the values in the Attribute Flags table to get the attribute value to\npass into this command.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Aa][Vv][Ee][Ll])\b)'
      comment: 'Set angular velocity.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Bb][Aa][Nn][Gg])\b)'
      comment: 'Causes a division by zero exception in the processor, to test the engine''s error handling\nroutines.'
      scope: entity.name.function.caos

    - match: '(\b([Bb][Aa][Ss][Ee])\b)'
      comment: 'Specify the base image number for this object/part.\nCan be used to allow anims from a large table\nof images by moving base sprite number around table.\nThis is the only way to use [ANIM] on an object\nwith more that 10 images in its image gallery\nbecause [ANIM] uses a single digit to specify poses.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Bb][Hh][Vv][Rr])\b)'
      comment: 'Sets the creature permissions for target. Sum the entries in the Creature Permissions table to get\nthe value to use.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Bb][Kk][Gg][Dd])\b)'
      comment: 'Change the current background displayed for the selected camera (with SCAM). Transition is as for\nMETA. The background must have been specified with the ADDM or ADDB command first.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Bb][Oo][Dd][Yy])\b)'
      comment: 'Similar to WEAR, only puts the given set of clothes on every body part. This only works for the non\ntintable overlay file'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Bb][Oo][Oo][Tt])\b)'
      comment: 'Loads in a list of numbered bootstrap folders contained within a folder called subboot. Bootstraps\nfolders numbers are powers of 2, sum the folder numbers to load those folders. There is provision\nfor more than one subboot folder, these should be uniquely numbered.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Bb][Oo][Rr][Nn])\b)'
      comment: 'Signals the target creature as having been born - this sends a birth event, and sets the TAGE\nticking.'
      scope: entity.name.function.caos

    - match: '(\b([Bb][Rr][Mm][Ii])\b)'
      comment: 'Sets the Map''s Metaroom and Room index bases for adding new rooms/metarooms.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Bb][Rr][Nn][:])\s*([Dd][Mm][Pp][Bb])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Dumps the sizes of the binary data dumps for current lobes and tracts.'
      scope: entity.name.function.caos

    - match: '([Bb][Rr][Nn][:])\s*([Dd][Mm][Pp][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Dumps a dendrite as binary data.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Bb][Rr][Nn][:])\s*([Dd][Mm][Pp][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Dumps a lobe as binary data.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Bb][Rr][Nn][:])\s*([Dd][Mm][Pp][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Dumps a neuron as binary data.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Bb][Rr][Nn][:])\s*([Dd][Mm][Pp][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Dumps a tract as binary data.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Bb][Rr][Nn][:])\s*([Ss][Ee][Tt][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sets a dendrite weight.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '([Bb][Rr][Nn][:])\s*([Ss][Ee][Tt][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sets a lobe''s SV rule float value.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Bb][Rr][Nn][:])\s*([Ss][Ee][Tt][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sets a neuron weight.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '([Bb][Rr][Nn][:])\s*([Ss][Ee][Tt][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sets a tract''s SV rule float value.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Bb][Uu][Zz][Zz])\b)'
      comment: 'Sets the ideal interval in milliseconds between each tick. However fast the machine, it won''t tick\nquicker than this, but it might tick slower. You can find the actual time taken with RACE. Changing\nthis from the default value of 50 midgame will damage profiling and seasons. Things such as creature\nbrains are designed for the default 50 millisecond update interval. Change this with caution!'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Cc][Aa][Bb][Nn])\b)'
      comment: 'Set the relative co-ordinates for a vehicle cabin, the place where creatures are held.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Cc][Aa][Bb][Pp])\b)'
      comment: 'Set the plane that vehicle passengers are at. This is relative to the vehicle''s plane.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Cc][Aa][Bb][Vv])\b)'
      comment: 'Sets the room number which things in the cabin think they are in. By default, the value is -1, and\nthe room is the one underneath wherever the agent happens to be. Make sure you set this if the\nvehicle ever remotely leaves the room system. This command effects values returned from ROOM and\nGRID. It won''t apply to some aspects of Creatures in the vehicle.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Cc][Aa][Bb][Ww])\b)'
      comment: 'Set the capacity or width of the cabin. This will determine how many passengers the cabin can hold,\neach passenger will be on a separate plane within the cabin. Use CABP to set the plane of the first\nagent relative to the cabin. The default width is zero, this means that the cabin will accept any\nnumber of passengers and will place them all on the same plane.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Cc][Aa][Cc][Ll])\b)'
      comment: 'This associates the classification specified with the CA specified. This allows the linking of\nCA''s to classifiers within creatures'' brains.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Cc][Aa][Ll][Cc])\b)'
      comment: 'Recalculates all the navigational CAs (warning: slow).'
      scope: entity.name.function.caos

    - match: '(\b([Cc][Aa][Ll][Gg])\b)'
      comment: 'Choose how a creature (TARG) decides which particular object in a category to look at.\nPICK_NEAREST_IN_X_DIRECTION=0, PICK_A_RANDOM_ONE=1, PICK_NEAREST_IN_CURRENT_ROOM=2,\nPICK_NEAREST_TO_GROUND=3, PICK_RANDOM_NEAREST_IN_X_DIRECTION=4.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Cc][Aa][Ll][Ll])\b)'
      comment: 'Calls a subroutine script on the owner with the specified event number. When that script finishes\nthe current script is resumed. No variables are shared between the two scripts so any return values\nmust go through OVs. The called script starts in the same INST state as the calling script, however,\nit may use SLOW or INST to override this initial state. In addition, when the script returns to the\ncalling script, the INST state is reset to what it was before the CALL command, so CALL preserves\nINSTness in the calling script. So if the caller script is in an INST then the called script will\ninherit that, any change in the called script to cancel this (such as OVER, WAIT, SLOW etc) will\nonly affect the called script... when execution returns to the caller script it will still be in\nwhatever state it was in before.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Cc][Aa][Tt][Oo])\b)'
      comment: 'Change the target''s category to the one specified. The default is -1 which means the category is\nbased on classifier and the catalogue as described in CATI. See also CATX and CATA.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Cc][Hh][Aa][Rr])\b)'
      comment: 'Sets a character in a string. String indices begin at 1.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,lvalue]

    - match: '(\b([Cc][Hh][Ee][Mm])\b)'
      comment: 'Adjusts chemical (0 to 255) by concentration -1.0 to +1.0 in the target creature''s bloodstream.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Cc][Ll][Aa][Cc])\b)'
      comment: 'Set the click action, which is the identifier of the message sent to the agent when it is clicked\non, provided attribute Activateable is set. Default is activate 1. Use -1 to prevent it sending a\nmessage. Also overridden by CLIK. Remember that the early Message Numbers differ slightly from\nScript Numbers.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Cc][Ll][Ii][Kk])\b)'
      comment: 'Sets a chain of three message ids to cycle through as the agent is clicked on. Entries of -1 are\nignored. Overridden by CLAC.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Cc][Mm][Rr][Aa])\b)'
      comment: 'Move current camera so top left corner of view is at world coordinate x y. Set pan 0 to jump\nstraight to location, pan 1 to smoothly scroll there (unless in a different meta room).'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Cc][Mm][Rr][Pp])\b)'
      comment: 'Centre current camera on world coordinate x y. Set pan 0 to jump straight to location, pan 1 to\nsmoothly scroll there (unless in different meta room), and pan 2 to smoothly scroll only if the\ndestination is already visible.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Cc][Mm][Rr][Tt])\b)'
      comment: 'Centre current camera on target. Set pan 0 to jump straight to location, pan 1 to smoothly scroll\nthere (unless in different meta room), and pan 2 to smoothly scroll only if the destination is\nalready visible.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Cc][Oo][Rr][Ee])\b)'
      comment: 'Sets the bounding box of the physical core of the object TARG. May be set to smaller (or larger)\nthan the sprite''s rectangle.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '([Dd][Bb][Gg][:])\s*([Aa][Ss][Rr][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Confirms that a condition is true. If it isn''t, it displays a runtime error dialog.'
      scope: entity.name.function.caos
      push: [rvalue, eqOp, rvalue]

    - match: '([Dd][Bb][Gg][:])\s*([Cc][Pp][Rr][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Clears agent profiling information. Measurements output with DBG: PROF start here.'
      scope: entity.name.function.caos

    - match: '([Dd][Bb][Gg][:])\s*([Ff][Ll][Ss][Hh])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This flushes the system''s input buffers - usually only useful if DBG: PAWSed.'
      scope: entity.name.function.caos

    - match: '([Dd][Bb][Gg][:])\s*([Hh][Tt][Mm][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sends CAOS documentation to the output stream. Sort order is 0 for alphabetical, 1 for\ncategorical.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Dd][Bb][Gg][:])\s*([Oo][Uu][Tt][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Send a string to the debug log - use DBG: POLL to retrieve.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Dd][Bb][Gg][:])\s*([Oo][Uu][Tt][Vv])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Send a number to the debug log - use DBG: POLL to retrieve.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Dd][Bb][Gg][:])\s*([Pp][Aa][Ww][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This pauses everything in the game. No game driven ticks will occur until a DBG: PLAY command is\nissued, so this command is only useful for debugging. Use PAUS for pausing of specific agents, which\nyou can use to implement a pause button.'
      scope: entity.name.function.caos

    - match: '([Dd][Bb][Gg][:])\s*([Pp][Ll][Aa][Yy])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This command undoes a previously given DBG: PAWS and allows game time to flow as normal.'
      scope: entity.name.function.caos

    - match: '([Dd][Bb][Gg][:])\s*([Pp][Oo][Ll][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This takes all of the DBG: OUTV and DBG: OUTS output to date and writes it to the output stream.'
      scope: entity.name.function.caos

    - match: '([Dd][Bb][Gg][:])\s*([Pp][Rr][Oo][Ff])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sends agent profile information to the output stream. This gives you data about the time the engine\nspends running the update and message handling code for each classifier. The data is measured from\nengine startup, or the point marked with DBG: CPRO. It''s output in comma separated value (CSV)\nformat, so you can load it into a spreadsheet (e.g. Gnumeric or Excel) for sorting and summing.'
      scope: entity.name.function.caos

    - match: '([Dd][Bb][Gg][:])\s*([Tt][Aa][Cc][Kk])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Pauses the game when the given agent next executes a single line of CAOS code. This pause is\nmid-tick, and awaits incoming requests, or the pause key. Either another DBG: TACK or a DBG: PLAY\ncommand will make the engine carry on. Any other incoming requests will be processed as normal.\nHowever, the virtual machine of the tacking agent is effectively in mid-processing, so some CAOS\ncommands may cause unpredictable results, and even crash the engine. In particular, you shouldn''t\nKILL the tacking agent. You can see which agent is being tracked with TACK.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Dd][Bb][Gg][:])\s*([Tt][Oo][Cc][Kk])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This command forces a tick to occur. It is useful in external apps to drive the game according to a\ndifferent clock instead of the game clock.'
      scope: entity.name.function.caos

    - match: '([Dd][Bb][Gg][:])\s*([Ww][Tt][Ii][Kk])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Changes the world tick WTIK to the given value. This should only be used for debugging, as it will\npotentially leave confusing information in the creature history, and change the time when delayed\nmessages are processed. Its main use is to jump to different seasons and times of day.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Cc][Oo][Rr])\b)'
      comment: 'Debug command to show the physical core of the TARG agent graphically.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Ee][Aa][Dd])\b)'
      comment: 'Makes the target creature die, triggering Die script and history events, closing its eyes, and\nstopping brain and biochemistry updates. Not to be confused with [KILL], which you will have to use\nlater to remove the actual body.'
      scope: entity.name.function.caos

    - match: '(\b([Dd][Ee][Ll][Ee])\b)'
      comment: 'Deletes the specified EAME variable.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Ee][Ll][Gg])\b)'
      comment: 'Deletes the specified GAME variable.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Ee][Ll][Mm])\b)'
      comment: 'Deletes the specified metaroom from the map.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Ee][Ll][Nn])\b)'
      comment: 'Deletes the specified NAME variable on TARG.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Ee][Ll][Rr])\b)'
      comment: 'Remove the room from the map.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Ee][Ll][Ww])\b)'
      comment: 'Deletes the specified world directory.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Ii][Rr][Nn])\b)'
      comment: 'Change creature to face a different direction. North 0, South 1, East 2, West 3.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Ii][Vv][Vv])\b)'
      comment: 'Divides a variable by an integer or float, so var = var / div. Uses integer division if both\nnumbers are integers, or floating point division otherwise.'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Dd][Mm][Aa][Pp])\b)'
      comment: 'Set to 1 to turn the debug map image on, 0 to turn it off. The debug map includes vehicle cabin\nlines.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Oo][Cc][Aa])\b)'
      comment: 'Updates all CAs the specified number of times.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Oo][Ii][Ff])\b)'
      comment: 'Do next instructions if condition is true, else skip to after correct nested [ELSE] or [ENDI]'
      scope: keyword.control.caos
      push: [rvalue, eqOp, rvalue]

    - match: '(\b([Dd][Oo][Ii][Nn])\b)'
      comment: 'Make the creature TARG process N instincts.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Oo][Nn][Ee])\b)'
      comment: 'This voluntary or involuntary action has been completed.'
      scope: entity.name.function.caos

    - match: '(\b([Dd][Oo][Oo][Rr])\b)'
      comment: 'Sets the permiability of the door between two rooms. This is used for both CAs and physical motion.\nSee also PERM.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Dd][Pp][Aa][Ss])\b)'
      comment: 'Drop all passengers matching classifier.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Dd][Rr][Ee][Aa])\b)'
      comment: 'Set to 1 to make the creature fall asleep and dream, 0 to stop the creature dreaming. When\ndreaming, a creature''s instincts are processed. See also ASLP.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Dd][Rr][Ii][Vv])\b)'
      comment: 'Adjusts the level of the given drive by the specified amount - can be positive or negative.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Dd][Rr][Oo][Pp])\b)'
      comment: 'Drop any objects you are carrying'
      scope: entity.name.function.caos

    - match: '(\b([Dd][Ss][Ee][Ee])\b)'
      comment: 'Debug command to show all the agents which can be seen by any creature.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ee][Cc][Oo][Nn])\b)'
      comment: 'Starts an enumeration across all the agents in a connective system, where agent is any agent within\nthe connective system.'
      scope: keyword.control.caos
      push: [rvalue]

    - match: '(\b([Ee][Ll][Aa][Ss])\b)'
      comment: 'Set the elasticity percentage. An agent with elasticity 100 will bounce perfectly, one with\nelasticity 0 won''t bounce at all.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ee][Ll][Ii][Ff])\b)'
      comment: 'ELseIF command to follow a DOIF. If the condition in a DOIF is false, each following ELIF command\nwill be evaluated in turn. Only the first true condition will have its code block executed.'
      scope: keyword.control.caos
      push: [rvalue, eqOp, rvalue]

    - match: '(\b([Ee][Ll][Ss][Ee])\b)'
      comment: 'Hit an [ELSE] during normal processing (ie. previous [DOIF] was true), so jump from here to\ncorresponding [ENDI], skipping any nested [DOIF]s en route'
      scope: keyword.control.caos

    - match: '(\b([Ee][Mm][Ii][Tt])\b)'
      comment: 'Target now constantly emits an amount of a CA into the room it is in.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ee][Nn][Dd][Ii])\b)'
      comment: 'Marks end of a [DOIF] or [DOIF]/[ELSE] statement'
      scope: keyword.control.caos

    - match: '(\b([Ee][Nn][Dd][Mm])\b)'
      comment: 'Compulsory command at end of macro, placed there by Macro constructor Macro is terminated and maybe\nself-destructs only [STOP] (never [ENDM]) commands may be placed in the body of macro. [ENDM] is\nstring terminator'
      scope: keyword.control.caos

    - match: '(\b([Ee][Nn][Uu][Mm])\b)'
      comment: '[ENUM]...[NEXT]\nIterate through each object which conforms to the given classification,\nsetting\n[TARG] to point to each valid object in turn.\nFamily, Genus and/or Species can be zero to act as\nwildcards.'
      scope: keyword.control.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ee][Pp][Aa][Ss])\b)'
      comment: 'Enumerate over owner vehicle''s passengers which match the given classifier. Similar to ENUM.'
      scope: keyword.control.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ee][Ss][Ee][Ee])\b)'
      comment: 'ESEE...[NEXT]\nEnumerate across all specified objects that can be seen by the [OWNR] object.\nNote:\nAll commands between [ESEE] and [NEXT] run as [INST]. [TARG] is returned to [OWNR] (in event\nscripts) after enumeration.'
      scope: keyword.control.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ee][Tt][Cc][Hh])\b)'
      comment: 'ETCH...[NEXT]\nEnumerate across all specified objects are touching the [OWNR] object.\nNote: All\ncommands between [ESEE] and [NEXT] run as [INST]. [TARG] is returned to [OWNR] (in event scripts)\nafter enumeration.'
      scope: keyword.control.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ee][Vv][Ee][Rr])\b)'
      comment: 'Part of a [LOOP]-[EVER] statement. Repeat loop forever.'
      scope: keyword.control.caos

    - match: '(\b([Ff][Aa][Cc][Ee])\b)'
      comment: 'Sets a facial expression on target creature.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ff][Aa][Dd][Ee])\b)'
      comment: 'Fade out any controlled sound currently playing with this [TARG].'
      scope: entity.name.function.caos

    - match: '(\b([Ff][Cc][Uu][Ss])\b)'
      comment: 'Set keyboard focus to the current PART of the targeted agent. The part should be a PAT: TEXT. If\nyou TARG NULL first, then no part will have the focus.'
      scope: entity.name.function.caos

    - match: '(\b([Ff][Dd][Mm][Pp])\b)'
      comment: 'Damp forward velocity by this much each tick. The value is from 0.0 to 1.0 where 0.0 means no\ndamping, 1.0 maximum.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Ff][Ii][Ll][Ee])\s*([Gg][Ll][Oo][Bb])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This globs a journal directory (0 for world one, 1 for main one) for the filespec provided. As all\nthis can do is list files, it does not worry about where you look relative to the journal directory\nin question. Use this with care.\nHaving globbed a directory, the listing is available on the input\nstream as a number, followed by the names of each file. To read - ise INOK, INNI and INNL. Once you\nhave finished, remember to do a FILE ICLO to remove the glob output from the VM.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Ff][Ii][Ll][Ee])\s*([Ii][Cc][Ll][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Disconnects anything which is attached to the input stream. If this is a file, then the file is\nclosed.'
      scope: entity.name.function.caos

    - match: '([Ff][Ii][Ll][Ee])\s*([Ii][Oo][Pp][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sets the file for the input stream of the current virtual machine - there is a virtual machine for\neach agent, so this is much the same as setting it for OWNR. Use INNL, INNI and INNF to get data\nfrom the stream, and INOK to check validity of the stream. The filename should include any file\nextension.\nYou should use FILE ICLO to close the file, although this happens automatically if you\nset a new file, if the virtual machine is destroyed, or if the engine exits.\nDirectory is 0 for the\ncurrent world''s journal directory, 1 for the main journal directory, or 2 for the GAME\nengine_other_world world''s journal directory.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Ff][Ii][Ll][Ee])\s*([Jj][Dd][Ee][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This deletes the file (filename) specified from the journal directory specified. If directory is\nzero, this is the current world''s journal directory, otherwise it is the main journal directory. It\ndeletes the file immediately, rather than marking it for the attic.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Ff][Ii][Ll][Ee])\s*([Oo][Cc][Ll][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Disconnects anything which is attached to the output stream. If this is a file, then the file is\nclosed.'
      scope: entity.name.function.caos

    - match: '([Ff][Ii][Ll][Ee])\s*([Oo][Ff][Ll][Uu])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Flush output stream. If it is attached to a disk file, this will force any data in the buffer to be\nwritten to disk.'
      scope: entity.name.function.caos

    - match: '([Ff][Ii][Ll][Ee])\s*([Oo][Oo][Pp][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sets the file for the output stream of the current virtual machine - there is a virtual machine for\neach agent, so this is much the same as setting it for OWNR. Use OUTV and OUTS or various other\ncommands to send text data to the stream. The filename should include any file extension.\nYou should\nuse FILE OCLO to close the file, although this happens automatically if you set a new file, if the\nvirtual machine is destroyed, or if the engine exits.\nDirectory is 0 for the current world''s\njournal directory, 1 for the main journal directory, or 2 for the GAME engine_other_world world''s\njournal directory. Set append to 1 to add to the end of the file, or 0 to replace any existing\nfile.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ff][Ll][Tt][Oo])\b)'
      comment: 'Move the top left corner of target to either the given screen coordinates, or the given coordinates\nrelative to the agent it is FREL to. Useful for floating agents.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ff][Oo][Rr][Ff])\b)'
      comment: 'Set the friends or foe lobe to learn from the creature.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ff][Rr][Aa][Tt])\b)'
      comment: 'This command sets the frame rate on the TARG agent. If it is a compound agent, then the part\naffected can be set with the PART command. Valid rates are from 1 to 255. 1 is Normal rate, 2 is\nhalf speed etc...'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ff][Rr][Ee][Ll])\b)'
      comment: 'Sets an agent for target to float relative to. To make target actually float, you need to set\nattribute Floatable as well. Set FREL to NULL to make the target float relative to the main camera -\nthis is the default. Use FLTO to set the relative position of the top left corner of the floating\nagent to the top left corner of the agent it is floating relative to.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ff][Rr][Ii][Cc])\b)'
      comment: 'Set physics friction percentage, normally from 0 to 100. Speed is lost by this amount when an agent\nslides along the floor.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ff][Rr][Mm][Tt])\b)'
      comment: 'Use this command to alter the appearance of the current text part. The line and character spacing\nvalues are expressed in number of extra pixels to insert between characters. Values for\njustification are 0 - Left, 1 - Right, 2 - Center, 4 - Bottom, 8 - Middle (you may add mutually\ncompatible numbers). The default format values are 8 8 8 8 0 0 0.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Ff][Rr][Ss][Hh])\b)'
      comment: 'Refreshes the main view port.'
      scope: entity.name.function.caos

    - match: '(\b([Ff][Vv][Ee][Ll])\b)'
      comment: 'Set forwards velocity.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Gg][Aa][Ii][Tt])\b)'
      comment: 'Specifies the current gait for a creature. The gaits are genetically defined. It sets the gait of\nthe creature agent stored in TARG.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Gg][Aa][Ll][Ll])\b)'
      comment: 'Changes the gallery (sprite file) used by an agent. This works for simple and compound agents\n(using the current PART). The current POSE is kept the same in both galleries.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Gg][Ee][Nn][Ee])\s*([Cc][Ll][Oo][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Clones a genome, creating a new moniker and copying the genetics file.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '([Gg][Ee][Nn][Ee])\s*([Cc][Rr][Oo][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Crosses two genomes with mutation, and fills in a child genome slot. Mutation variables may be in\nthe range of 0 to 255.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Gg][Ee][Nn][Ee])\s*([Kk][Ii][Ll][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Clears a genome slot.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Gg][Ee][Nn][Ee])\s*([Ll][Oo][Aa][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Loads an engineered gene file into a slot. Slot 0 is a special slot used only for creatures, and\ncontains the moniker they express. Only the NEW: CREA command fills it in. Other slot numbers are\nused in pregnant creatures, in eggs, or to temporarily store a genome before expressing it with NEW:\nCREA. You can use them as general purpose genome stores.\nThe gene file can have any name, and is\nloaded from the main genetics file. A new moniker is generated, and a copy of the gene file put in\nthe world directory. You can use * and ? wildcards in the name, and a random matching file will be\nused.\nYou can also load monikered files from the world genetics directory with this command. If so,\nthe file is copied and a new moniker generated. Wildcards are matched first in the main genetics\ndirectory, and only if none match is the world genetics directory searched.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Gg][Ee][Nn][Ee])\s*([Mm][Oo][Vv][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Moves a genome from one slot to another.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '([Gg][Ii][Dd][Ss])\s*([Ff][Mm][Ll][Yy])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Output the genus numbers for which there are scripts in the scriptorium for the given family. List\nis space delimited.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Gg][Ii][Dd][Ss])\s*([Gg][Nn][Uu][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Output the species numbers for which there are scripts in the scriptorium for the given family and\ngenus. List is space delimited.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Gg][Ii][Dd][Ss])\s*([Rr][Oo][Oo][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Output the family numbers for which there are scripts in the scriptorium. List is space delimited.'
      scope: entity.name.function.caos

    - match: '([Gg][Ii][Dd][Ss])\s*([Ss][Pp][Cc][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Output the event numbers of scripts in the scriptorium for the given classifier. List is space\ndelimited.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Gg][Oo][Tt][Oo])\b)'
      comment: 'Don''t use this command. It jumps directly to a label defined by SUBR. This command is only here\nbecause it is used implicitly by DOIF blocks. This is a really dangerous command to use manually,\nbecause if you jump out of a block of code (eg a LOOP...EVER block), the stack frame will no longer\nbe correct, and the script will most likely crash. Don''t use it! See SUBR.'
      scope: entity.name.function.caos
      push: [token]

    - match: '(\b([Gg][Pp][Aa][Ss])\b)'
      comment: 'Collect all nearby agents matching the classifier as passengers.\n{rectToUse} = 0 : Nearby means\ntouching bounding rectangle of agent\n{rectToUse} = 1 : Nearby means touching cabin rectangle'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Gg][Rr][Pp][Ll])\b)'
      comment: 'Add a line to a graph (previously created with PAT: GRPH). The first line you add will be line 0.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Gg][Rr][Pp][Vv])\b)'
      comment: 'Add a value to a line on a graph. after you have added a value to each line on the graph, it will\nbe updated by scrolling the current values to the left'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Gg][Ss][Uu][Bb])\b)'
      comment: 'GSUBs to given [SUBR] label. Often has to scan macro for subroutine start, but always remembers the\naddress of the last subr visited, so most subrs will execute quickly in loops'
      scope: entity.name.function.caos
      push: [token]

    - match: '(\b([Hh][Aa][Ii][Rr])\b)'
      comment: 'Tidies or ruffles hair. Positive means tidy, negative untidy. There can be multiple stages of\ntidiness or untidiness; the more extreme the value the tidier or untidier.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Hh][Aa][Nn][Dd])\b)'
      comment: 'Sets the name of the hand. Bt default this is ''hand''.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Hh][Ee][Ll][Pp])\b)'
      comment: 'Lists all command names to the output stream.'
      scope: entity.name.function.caos

    - match: '([Hh][Ii][Ss][Tt])\s*([Ee][Vv][Nn][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Triggers a life event of the given type. Some events are triggered automatically by the engine,\nsome events need triggering from CAOS, others are custom events that you can use for your own\npurposes. See HIST TYPE for details of the event numbers. All new events made call the Life Event\nscript.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '([Hh][Ii][Ss][Tt])\s*([Ff][Oo][Tt][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'For the given life event, sets the associated photograph. Use SNAP to take the photograph first.\nIf\nthere was already a photograph for the event, then it is automatically marked for the attic as in\nLOFT, and overwritten with the new photo. Hence you can use an empty string to clear a photo. If\nHIST WIPE is used to clear the event, the photo is similarly stored in the attic.\nIt is considered\nan error to send a photograph that is in use (unless cloned with TINT) to the attic. If this\nhappens, you will get a runtime error. You should either be confident that no agents are using the\nphoto, or call LOFT first to test if they are.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Hh][Ii][Ss][Tt])\s*([Nn][Aa][Mm][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Renames the creature with the given moniker.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Hh][Ii][Ss][Tt])\s*([Uu][Tt][Xx][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'For the given life event, sets the user text.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Hh][Ii][Ss][Tt])\s*([Ww][Ii][Pp][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Purge the creature history for the given moniker. Only applies if the genome isn''t referenced by\nany slot, and the creature is fully dead or exported. Use OOWW to test this first.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ii][Mm][Ss][Kk])\b)'
      comment: 'Set the input event mask. Indicates which types of global input events the agent is interested in,\nif any. For example, if the flag for "key up" events is set here, the agents "key up" script will be\nrun every time a key is released.\nInput event bit flags are\n1 Raw Key Down\n2 Raw Key Up\n4 Raw Mouse\nMove\n8 Raw Mouse Down\n16 Raw Mouse Up\n32 Raw Mouse Wheel\n64 Raw Translated Char\nYou can find the\nscript numbers executed by following the links above.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ii][Nn][Jj][Rr])\b)'
      comment: 'Reduce the life force of the specified organ.\nAmount is in the range of (0-255) and max damage is a\n1/10 of the organs initial life force.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ii][Nn][Ss][Tt])\b)'
      comment: 'Make the rest of this macro execute in a single tick.\nThis is used to ensure the creation of an\nobject (for example) is not interrupted during the scheduling of concurrent scripts'
      scope: entity.name.function.caos

    - match: '(\b([Ii][Ss][Cc][Rr])\b)'
      comment: 'Marks the following chunk of script as being for the installation of an object.\nThe presence of\n[SCRP], [RSCR] or [ENDM] is used to delimit the installation chunk'
      scope: keyword.control.caos

    - match: '(\b([Jj][Ee][Cc][Tt])\b)'
      comment: 'Injects a COS file from the bootstrap directory. The file is searched for (case insensitively) in\nall bootstrap subdirectories. You must specify the file extension (it doesn''t have to be .cos).\nFlags is a combination of what you want to inject:\n1 - Remove script\n2 - Event scripts\n4 - Install\nscript\nThe scripts (if present) are injected in that order. So, setting flags to 7 will fully\nuninstall and reinstall the cos file. Error messages and output are written to the current output\nstream.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Kk][Ii][Ll][Ll])\b)'
      comment: 'Delete the object specified.\n@example: #{kill edit} deletes the object in the [EDIT]\nbuffer\n@example: #{kill ownr} kills the owner of the script\n@example: #{kill targ} kills the current\n[TARG] object.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ll][Ii][Kk][Ee])\b)'
      comment: 'State a personal opinion about a creature.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ll][Ii][Nn][Ee])\b)'
      comment: 'Adds a line to target''s drawing list. The line goes between the start and end points (world\ncoordinates) in the specified colour. Set stipple_on and stipple_off to 0 to draw a solid line, or\nto the number of pixels to alternate for a stippled line. To clear all the lines for an agent, call\nLINE with the start and end points the same.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Ll][Ii][Nn][Kk])\b)'
      comment: 'Sets the permiability of the link between the rooms specified, creating the link if none exists\nbefore. Set to 0 to close (destroy) the link. This is used for CAs. See also DOOR.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ll][Oo][Aa][Dd])\b)'
      comment: 'Loads the specified world at the start of the next tick. See also QUIT for important information\nabout using INST.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ll][Oo][Cc][Ii])\b)'
      comment: 'Sets a biochemical locus value. See Receptor Locus Numbers and Emitter Locus Numbers'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Ll][Oo][Cc][Kk])\b)'
      comment: 'Prevents the execution of other event scripts taking place on this object and hence interrupting\nthis script.\nNote that this will result in lost events and messages. Any script that contains a LOCK\nshould also contain an UNLK. This will not prevent the execution of a SCRIPTEXCEPTION macro script\nhowever.'
      scope: entity.name.function.caos

    - match: '(\b([Ll][Oo][Oo][Pp])\b)'
      comment: 'Top of LOOP...[UNTL] statment or LOOP...[EVER]\nLOOPs may be nested, but MUST NOT be jumped out of'
      scope: keyword.control.caos

    - match: '(\b([Ll][Tt][Cc][Yy])\b)'
      comment: 'Set the latency for the creatures given involuntary action (only relevant to involuntary actions).\nPrevent this action from repeating for an amount of time defined by min max. Delay is a random\namount of ticks between min*4 and max*4.\naction int\nmin int\nmax int'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Mm][Aa][Nn][Nn])\b)'
      comment: 'Outputs help on the given command to the output stream.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Mm][Aa][Pp][Dd])\b)'
      comment: 'Sets the dimensions of the map. These are the maximum world coordinates. Metarooms are rectangles\nwithin this area.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Mm][Aa][Pp][Kk])\b)'
      comment: 'Resets the map to be empty.'
      scope: entity.name.function.caos

    - match: '(\b([Mm][Aa][Tt][Ee])\b)'
      comment: 'Only relevant to male creatures – pass on waiting sperm to _IT_ (if _IT_ is female and the same\ngenus). Female will conceive if she is in the right condition – fertile and receptive.'
      scope: entity.name.function.caos

    - match: '(\b([Mm][Cc][Ll][Rr])\b)'
      comment: 'Clear the music for the metaroom at the given location.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Mm][Ee][Mm][Xx])\b)'
      comment: 'Sends information about the memory allocated to the output stream. In order, these are the Memory\nLoad (unknown), Total Physical (size in bytes of physical memory), Available Physical (free physical\nspace), Total Page File (maximum possible size of page file), Available Page File (size in bytes of\nspace available in paging file), Total Virtual (size of user mode portion of the virtual address\nspace of the engine), Available Virtual (size of unreserved and uncommitted memory in the user mode\nportion of the virtual address space of the engine).'
      scope: entity.name.function.caos

    - match: '([Mm][Ee][Ss][Gg])\s*([Ww][Rr][Ii][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Write/Send message to a specific object. Object is a pointer to an object ([TARG], [OWNR], [FROM]\nor [NORN])'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Mm][Ee][Ss][Gg])\s*([Ww][Rr][Tt][+])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Write message {message} with parameters {p1} and {p2} to object; to be handled in {delay} clock\nticks. If {delay} = 0 the message will be handled immediately. {message} must be in the range\n256..65535. (Messages 0..12 are currently used for ACTIVATE1 etc. events).\nThe message that is sent\nwill trigger event m on the targ object.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Mm][Ee][Tt][Aa])\b)'
      comment: 'Change the current camera (set with SCAM) to a new meta room. Moves the top left coordinate of the\ncamera to the given coordinates.\nTransition can be:\n0 - no transition effect\n1 - flip horizontally\n2\n- burst'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Mm][Ii][Dd][Ii])\b)'
      comment: 'Plays a MIDI file. Set to an empty string to stop the MIDI player.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Mm][Ii][Nn][Dd])\b)'
      comment: 'Enable (1) or disable (0) the creature''s brain (unlike ZOMB# in that the brain actually stops\nprocessing and it''s output is frozen onto the one noun and verb).'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Mm][Ii][Rr][Aa])\b)'
      comment: 'Tell the agent to draw the current sprite mirrored (send 1 as a parameter) or normally (send 0 as a\nparameter)'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Mm][Mm][Ss][Cc])\b)'
      comment: 'Associates a music track with the meta room at the specified coordinates.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Mm][Oo][Dd][Vv])\b)'
      comment: '{value1} = {value1} % {value2}'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Mm][Oo][Tt][Rr])\b)'
      comment: 'Enable (1) or disable (0) the creature''s motor faculty, i.e. whether it sets the IT object and\nfires off scripts.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Mm][Oo][Uu][Ss])\b)'
      comment: 'Defines the behaviour of the mouse button for the default pointer behaviour - see PURE.\n0 is\nnormal\n1 means the right button does what the left button does\n2 means the left button does what the\nright button does'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Mm][Uu][Ll][Vv])\b)'
      comment: 'Multiplies a variable by an integer or float, so var = var * mul.'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Mm][Vv][Bb][Yy])\b)'
      comment: 'Move the target agent by relative distances, which can be negative or positive.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Mm][Vv][Ff][Tt])\b)'
      comment: 'Move creature''s down foot to position x,y. Use this instead of MVTO for creatures.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Mm][Vv][Ss][Ff])\b)'
      comment: 'Move the target agent into a safe map location somewhere in the vicinity of x, y. Only works on\nautonomous agents - see MOVS. Works like a safe MVFT for creatures.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Mm][Vv][Tt][Oo])\b)'
      comment: 'Move the top left corner of the target agent to the given world coordinates. Use MVFT instead to\nmove creatures.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Nn][Aa][Mm][Nn])\b)'
      comment: 'Enumerates through NAME variable names, roughly as GAMN does through GAME variables. Start and end\nwith an empty string.'
      scope: entity.name.function.caos
      push: [lvalue]

    - match: '(\b([Nn][Ee][Gg][Vv])\b)'
      comment: '{value1} = -{value1}'
      scope: entity.name.function.caos
      push: [lvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Hh][Ee][Aa][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Dump debugging information about who is NET: HEARing on what channels.'
      scope: entity.name.function.caos

    - match: '([Nn][Ee][Tt][:])\s*([Hh][Ee][Aa][Rr])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'The target agent will now accept CAOS messages over the network on the specified channel, and\nexecute their script as appropriate. Use NET: WRIT to send the message.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Ll][Ii][Nn][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Goes on or offline, connecting or disconnecting from the Babel server. Set to 1 to connect, 0 to\ndisconnect. A NET: USER must be set first. NET: ERRA is set to any error code. While the connection\nis being made, this command can block for several ticks. This command never runs in an INST.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Pp][Aa][Ss][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Set nickname and password - do this before connecting with NET: LINE. If you set GAME\n"engine_netbabel_save_passwords" to 1 then the password for each nickname is saved in user.cfg, so\nyou can specify an empty string for the password after the first time. The nickname is saved with\nthe serialised world, so is cleared when you start a new world. You can use NET: PASS to retrieve\nthe user later.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Rr][Uu][Ss][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns (into store_result) a random user who is currently online. Returns an empty string if\nyou''re offline, or if you aren''t using the Docking Station Babel server module. Since you''re\nonline, it can return yourself (especially if you''re the only person online!). The user is also\nonly likely to be online - they could have gone offline since the server replied to you.\nThis is a\ncommand rather than an integer r-value because it is blocking. This means that it might take several\nticks before the server returns the result. In this sense it is similar to a command like OVER, so\nit does not run in an INST. You should use LOCK if you don''t want your script interrupting.'
      scope: entity.name.function.caos
      push: [lvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Ss][Tt][Aa][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns statistics for the current Babel connection, or -1 if offline. This command can block\n(doesn''t execute in an INST). The statistics are:\ntime_online - Time online in\nmilliseconds\nusers_online - Number of users currently connected to the server\nbytes_received - Bytes\nreceived by the client\nbytes_sent - Bytes sent from the client'
      scope: entity.name.function.caos
      push: [lvalue,lvalue,lvalue,lvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Uu][Nn][Ii][Kk])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the specified user''s screen or nick name. Returns empty string if offline, or no such\nuser. This command can take many ticks to execute while the server is quizzed, like NET: RUSO.'
      scope: entity.name.function.caos
      push: [lvalue,rvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Ww][Hh][Oo][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Dump debugging information about the whose wanted register.'
      scope: entity.name.function.caos

    - match: '([Nn][Ee][Tt][:])\s*([Ww][Hh][Oo][Ff])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Removes a user from the whose wanted list for the target agent. See NET: WHON.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Ww][Hh][Oo][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Add a user to the whose wanted register for the target agent. Scripts User Online and User Offline\nare now called on this agent when that user goes on or offline, or indeed when the local user goes\noffline. Use NET: WHOF to remove them from the register. This command is blocking, it can take\nseveral ticks to return.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Nn][Ee][Tt][:])\s*([Ww][Hh][Oo][Zz])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Zap the target agent''s whose wanted register, removing all entries.'
      scope: entity.name.function.caos

    - match: '([Nn][Ee][Tt][:])\s*([Ww][Rr][Ii][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Send a message to a remote machine, as specified by the user identifier. All agents which are NET:\nHEARing on the given channel will receive the message, and run the appropriate script. If the\nspecified user is offline, then the message is discarded. The FROM variable of the receiving script\ncontains the user id of the sender, as a string. See also MESG WRIT.\nPorts'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Nn][Ee][Ww][:])\s*([Cc][Oo][Mm][Pp])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a new compound agent. The sprite file is for the first part, which is made automatically.\nSimilarly, image_count and first_image are for that first part. The plane is the absolute plane of\npart 1 - the planes of other parts are relative to the first part.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Nn][Ee][Ww][:])\s*([Cc][Rr][Aa][Gg])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Makes a non-skeletal creature. The first five arguments are the same as NEW: CREA. The last four,\nstarting from the sprite file, are exactly as in NEW: COMP.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Nn][Ee][Ww][:])\s*([Cc][Rr][Ee][Aa])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Makes a creature using the genome from the given gene slot in another agent. You''ll want to use\nGENE CROS or GENE LOAD to fill that slot in first. The gene slot is cleared, as control of that\ngenome is moved to the special slot 0 of the new creature, where it is expressed. Sex is 1 for male,\n2 for female or 0 for random. The variant can also be 0 for a random value between 1 and 8. See also\nNEWC.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Nn][Ee][Ww][:])\s*([Ss][Ii][Mm][Pp])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a new simple agent, using the specified sprite file. The agent will have image_count sprites\navailable, starting at first_image in the file. The plane is the screen depth to show the agent at -\nthe higher the number, the nearer the camera.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Nn][Ee][Ww][:])\s*([Vv][Hh][Cc][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a new vehicle. Parameters are the same as NEW: COMP.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Nn][Ee][Ww][Cc])\b)'
      comment: 'This version of NEW: CREA executes over a series of ticks, helping to prevent the pause caused by\nthe creation of a creature with the NEW: CREA command. However, it cannot be used in install scripts\n(e.g. the bootstrap) and so NEW: CREA should be used for that.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Nn][Ee][Xx][Tt])\b)'
      comment: 'part of [ENUM]...[NEXT]'
      scope: keyword.control.caos

    - match: '(\b([Nn][Oo][Hh][Hh])\b)'
      comment: 'Tell the creature to immediately stop holding hands with the pointer. Useful when you are about to\nteleport a norn, it prevents the pointer from continuously changing his position back to where it\nwas.'
      scope: entity.name.function.caos

    - match: '(\b([Nn][Oo][Rr][Nn])\b)'
      comment: 'Chooses the active creature. Script 120 is executed on that creature, to inform them that they''ve\nbeen selected.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Nn][Oo][Tt][Vv])\b)'
      comment: 'Perform a bitwise NOT on an integer variable.'
      scope: entity.name.function.caos
      push: [lvalue]

    - match: '(\b([Nn][Uu][Dd][Ee])\b)'
      comment: 'Removes all clothes from a creature. Any changed layer 0 will revert to drawing the body part\nagain. See WEAR.'
      scope: entity.name.function.caos

    - match: '([Oo][Rr][Dd][Rr])\s*([Ss][Hh][Oo][Uu])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sends a spoken command from target to all creatures that can hear it.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Oo][Rr][Dd][Rr])\s*([Ss][Ii][Gg][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sends a spoken command from target to all creatures that can see it.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Oo][Rr][Dd][Rr])\s*([Tt][Aa][Cc][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sends a spoken command from target to all creatures that are touching it.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Oo][Rr][Dd][Rr])\s*([Ww][Rr][Ii][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Sends a spoken command from target to the specified creature.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Oo][Rr][Rr][Vv])\b)'
      comment: 'sets the {var} to the {var} bit-wise or with {value}\n{var} = {var} | {value}'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Oo][Uu][Tt][Ss])\b)'
      comment: 'Sends a string to the output stream. When running a script, the stream is null and this command\ndoes nothing. For an externally injected command, the data from the stream is returned to the\ncalling process. For the CAOS command, the text is returned as a string. You can use FILE OOPE to\nset the stream to a journal file.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Oo][Uu][Tt][Vv])\b)'
      comment: 'Similar to OUTS only outputs a float or integer as a decimal string.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Oo][Uu][Tt][Xx])\b)'
      comment: 'This sends the string text to the output stream. However it first transforms any escapes into\nquoted escapes, and it also quotes the entire string for you.\ne.g.:\noutx "Moooose\n"\nWould\nproduce:\n"Moooose\n"\non the output stream instead of:\nMoooose'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Oo][Vv][Ee][Rr])\b)'
      comment: 'Wait until [TARG] objects animation is over.\nNote: [ANIM]s ending in R will never end, hence\ncausing a lock out'
      scope: entity.name.function.caos

    - match: '(\b([Pp][Aa][Gg][Ee])\b)'
      comment: 'Sets current page for text part. The page number should be equal or greater than zero and less than\nthe number returned by NPGS. Use PAT: TEXT or PAT: FIXD to make a text part, and PART to set the\ncurrent part.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Pp][Aa][Rr][Tt])\b)'
      comment: 'Sets the working part number. Future command such as POSE and ANIM, amongst others, act on that\npart of a compound agent.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Pp][Aa][Tt][:])\s*([Bb][Uu][Tt][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a button on a compound agent. anim_hover is an animation, as in the ANIM command, to use\nwhen the mouse is over the button - when the mouse is moved off, it returns to any previous\nanimation that was going. message_id is sent when the button is clicked. option is 0 for the mouse\nto hit anywhere in the bounding box, 1 to hit only non-transparent pixels.\n_P1_ of the message is\nset to the part number of the buttons allowing you to overload your messages by button group and\nthen switch on input value in the script.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Pp][Aa][Tt][:])\s*([Cc][Mm][Rr][Aa])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a camera with possible overlay sprite whose name may be blank. Use SCAM to change the\ncamera''s view.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Pp][Aa][Tt][:])\s*([Dd][Uu][Ll][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a dull part for a compound agent. A dull part does nothing except show an image from the\ngiven sprite file. You should number part ids starting at 1, as part 0 is automatically made when\nthe agent is made. The dull part''s position is relative to part 0, as is its plane. Use PART to\nselect it before you change POSE or ANIM, or use various other commands.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Pp][Aa][Tt][:])\s*([Ff][Ii][Xx][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a fixed text part. The text is wrapped on top of the supplied gallery image. new-line\ncharacters may be used. Use PTXT to set the text.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Pp][Aa][Tt][:])\s*([Gg][Rr][Pp][Hh])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Creates a graph part on a compound agent. Use GRPL to add a line to the graph and GRPV to add a\nvalue to a graph line.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Pp][Aa][Tt][:])\s*([Kk][Ii][Ll][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Destroys the specified part of a compound agent. You can''t destroy part 0.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Pp][Aa][Tt][:])\s*([Mm][Oo][Vv][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Moves a compound part to the new relative position specified.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Pp][Aa][Tt][:])\s*([Tt][Ee][Xx][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Creates a text entry part. Gains the focus when you click on it, or with the FCUS command. Sends\nthe message_id when return is pressed - a good place to use PTXT to get the text out, and to set the\nfocus elsewhere. Set message_id to 0 to not call any script, or to -1 to not send any message and\ninstead insert a carriage return.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Pp][Aa][Uu][Ss])\b)'
      comment: 'Stops the target agent from running - it''ll freeze completely, scripts and physics. Set to 1 to\npause, 0 to run. You might want to use WPAU with this to implement a pause game option.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Pp][Ee][Rr][Mm])\b)'
      comment: 'Value from 1 to 100. Sets which room boundaries the agent can pass through. The smaller the PERM\nthe more it can go through. DOOR sets the corresponding room boundary permiability. Also used for\nESEE, to decide what it can see through.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Pp][Ll][Mm][Dd])\b)'
      comment: 'Dumps out all the dendrite learned information of the specified tract to a file (will be changed to\nsync with Palm).'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Pp][Ll][Mm][Uu])\b)'
      comment: 'Configures the dendrites in the specified tract with the data in the file (will be changed to sync\nwith Palm).'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Pp][Ll][Nn][Ee])\b)'
      comment: 'Sets the target agent''s principal drawing plane. The higher the value, the nearer the camera. For\ncompound agents, the principal plane is the one for the automatically made first part. The plane of\nother parts is relative to this one.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Pp][Oo][Ss][Ee])\b)'
      comment: 'Sets the object (or parts) pose = i.e. which image number it is currently using'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Pp][Rr][Aa][Yy])\s*([Gg][Aa][Rr][Bb])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This command clears the manager''s cached resource data. Execute this after a lot of resource\naccesses (E.g. installing an agent) to clean up the memory used during the process. If you don''t do\nthis, excess memory can be held for a while, If the parameter is zero (the most usual) then the\nmanager will only forget resources which are not in use at the moment. If force is non-zero, then\nthe manager will forget all the previously loaded resources. As the resources currently in use go\nout of scope, they are automatically garbage collected.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Pp][Rr][Aa][Yy])\s*([Rr][Ee][Ff][Rr])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This command refreshes the engine''s view of the Resource directory. Execute this if you have\nreason to believe that the files in the directory may have changed. It only detects changes if there\nis a new file or a deleted file - if a file has only changed it won''t notice. This is awkward\nduring development, you can use PRAY KILL to kill the old file before copying the new one over. PRAY\nREFR forces a PRAY GARB to happen automatically.'
      scope: entity.name.function.caos

    - match: '(\b([Pp][Rr][Oo][Pp])\b)'
      comment: 'Sets the level of a CA (cellular automata) in a particular room. There are 16 CAs, and their\nmeaning depends on the game. The level is between 0 and 1.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Pp][Rr][Tt][:])\s*([Bb][Aa][Nn][Gg])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Breaks connections randomly with other machines (as if the machine had been ''banged''. Use a\nbang_strength of 100 to disconnect all ports, 50 to disconnect about half etc.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Pp][Rr][Tt][:])\s*([Ii][Nn][Ee][Ww])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a new input port on target. You should number input port ids starting at 0. The message_num\nis the message that will be sent to the agent when a signal comes in through the input port. _P1_ of\nthat message will contain the data value of the signal. The position of the port, relative to the\nagent, is given by x, y.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Pp][Rr][Tt][:])\s*([Ii][Zz][Aa][Pp])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Remove the specified input port.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Pp][Rr][Tt][:])\s*([Jj][Oo][Ii][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Connect an output port on the source agent to an input port on the destination. An input may only\nbe connected to one output at at time, but an output may feed any number of inputs.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '([Pp][Rr][Tt][:])\s*([Kk][Rr][Aa][Kk])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Breaks a specific connection on a machine. If in_or_out is zero, it is an input port whose\nconnection is broken, if it is an output port, then all inputs are disconnected.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Pp][Rr][Tt][:])\s*([Oo][Nn][Ee][Ww])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Create a new output port on target. You should number input port ids starting at 0. The port''s\nrelative position is given by x, y.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Pp][Rr][Tt][:])\s*([Oo][Zz][Aa][Pp])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Remove the specified output port.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Pp][Rr][Tt][:])\s*([Ss][Ee][Nn][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Send a signal from the specified output port to all connected inputs. The data can be any integer.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Pp][Ss][Ww][Dd])\b)'
      comment: 'Sets the password for the next world loaded. The world must be loaded (and saved) before it is\nactually set.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Pp][Tt][Xx][Tt])\b)'
      comment: 'Set string of current text part. Use PAT: TEXT or PAT: FIXD to make a text part, and PART to set\nthe current part.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Pp][Uu][Hh][Ll])\b)'
      comment: 'Set the relative x and y coordinate of the handle that target is picked up by, for the given pose.\nThis pose is measured from the absolute base specified in the NEW: command, rather than the relative\nbase specified by the BASE command. Pose -1 sets the same point for all poses.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Pp][Uu][Pp][Tt])\b)'
      comment: 'Set the relative x and y coordinate of the place where target picks agents up, for the given pose.\nThis pose is measured from the absolute base specified in the NEW: command, rather than the relative\nbase specified by the BASE command. Pose -1 sets the same point for all poses. For vehicles use the\nCABN command.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Pp][Uu][Rr][Ee])\b)'
      comment: 'Enables or disables the default clicking and moving behaviour of the pointer. This default\nbehaviour is to implement CLAC and CLIK, and to operate ports. Set to 1 to enable, 0 to disable.\nWhen disabled, use IMSK to hook mouse events.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Qq][Uu][Ii][Tt])\b)'
      comment: 'Quits the engine at the start of the next tick, without saving any changes. Call SAVE first to make\nit save the current world. If doing a sequence like "SAVE QUIT" or "SAVE LOAD menu", do it in an\nINST section. Otherwise it will sometimes save between the two instructions, meaning it quits (or\nloads menu) immediately upon reloading.'
      scope: entity.name.function.caos

    - match: '(\b([Rr][Aa][Tt][Ee])\b)'
      comment: 'Sets various rates for a CA (cellular automata) in a particular type of room. The values can be\nfrom 0 to 1. Gain is the susceptibility to absorb from agents in the room, and loss is the amount\nlost to the atmosphere. The diffusion is the amount it spreads to adjacent rooms.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Rr][Cc][Ll][Rr])\b)'
      comment: 'Clear the music for the room at the given location.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Rr][Ee][Aa][Ff])\b)'
      comment: 'Refreshes the catalogue from files on disk, from the main catalogue directory and the world\ncatalogue directory. These are normally read in at startup, when a new world is read in, or when the\nPRAY resources system installs a catalogue file. Use while developing CAOS programs to refresh the\ncatalogue as you add entries.'
      scope: entity.name.function.caos

    - match: '(\b([Rr][Ee][Pp][Ee])\b)'
      comment: 'End [REPS] loop'
      scope: keyword.control.caos

    - match: '(\b([Rr][Ee][Pp][Ss])\b)'
      comment: 'Repeat the following code # times, up to next [REPE] (# >= 1)\nNOTE: [REPS]/[REPE] may be nested,\nbut loops must NOT be jumped out of'
      scope: keyword.control.caos
      push: [rvalue]

    - match: '(\b([Rr][Ee][Tt][Nn])\b)'
      comment: 'returns from a [GSUB]'
      scope: keyword.control.caos

    - match: '(\b([Rr][Gg][Aa][Mm])\b)'
      comment: 'Refresh all settings that are always read from game variables at start up e.g. the length of a day.\nThis allows you to change such setting on the fly.'
      scope: entity.name.function.caos

    - match: '(\b([Rr][Mm][Ss][Cc])\b)'
      comment: 'Associates a music track with the room at the specified coordinates. This overrides any track\nspecified for the metaroom that the room is in.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Rr][Nn][Gg][Ee])\b)'
      comment: 'Sets the distance that the target can see and hear, and the distance used to test for potential\ncollisions. See also ESEE, OBST.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Rr][Oo][Tt][Nn])\b)'
      comment: 'For automatic change of sprite when the agent rotates the engine assumes that the sprite file is\nstored with all the sprites for one rotation together starting with pointing north.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Rr][Pp][Aa][Ss])\b)'
      comment: 'Specified vehicle drops the specified passenger.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Rr][Ss][Cc][Rr])\b)'
      comment: 'Marks the following chunk of scripts as being for the removal of an object.\nThe presence of [SCRP],\n[ISCR] or [ENDM] is used to delimit the removal chunk'
      scope: keyword.control.caos

    - match: '(\b([Rr][Tt][Aa][Rr])\b)'
      comment: 'Randomly selects a member from the given classification and sets it as [TARG]. Null if no members\nexist'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Rr][Tt][Yy][Pp])\b)'
      comment: 'Sets the type of a room. The meaning of the types depends on the game. RATE also uses the room\ntype.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ss][Aa][Vv][Ee])\b)'
      comment: 'Saves the current world at the start of the next tick. See also QUIT for important information\nabout using INST.'
      scope: entity.name.function.caos

    - match: '(\b([Ss][Aa][Yy][Nn])\b)'
      comment: 'Speak your most pressing need'
      scope: entity.name.function.caos

    - match: '(\b([Ss][Cc][Aa][Mm])\b)'
      comment: 'Sets the current camera to be used in subsequent camera macro commands. This uses the given TARG\nand the given PART number. If you set this to NULL then the Main Camera will be used. This is the\ndefault setting'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ss][Cc][Rr][Pp])\b)'
      comment: 'Indicates that the rest of this macro is to be installed into the scriptorium, making it available\nas a new/replacement event script for a given type of object.\nfamily genus species – indicate the\nowner of this script, if values of 0 are used for any of these then the script will be installed as\na default script for a wide range of objects. i.e. if species is 0 then the script will apply to all\nwho share the same family and genus. event – indicates the event that will invoke this script, see\nthe reference section for a list of event numbers.'
      scope: keyword.control.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Ss][Cc][Rr][Xx])\b)'
      comment: 'Removes the script matching this description from the scriptorium.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Ss][Dd][Mm][Pp])\b)'
      comment: 'Damp sideways velocity by this much each tick. The value is from 0.0 to 1.0 where 0.0 means no\ndamping, 1.0 maximum.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ss][Ee][Tt][Aa])\b)'
      comment: 'Stores a reference to an agent in a variable.'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Ss][Ee][Tt][Ss])\b)'
      comment: 'Sets a variable to a string value.'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Ss][Ee][Tt][Vv])\b)'
      comment: 'Stores an integer or float in a variable.'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Ss][Ee][Zz][Zz])\b)'
      comment: 'Makes the TARG agent speak the specified text with voice as set by VOIS or VOIC. If TARG is a\ncreature then it will be spoken properly (speech bubble et al).'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ss][Hh][Oo][Ww])\b)'
      comment: 'Set the parameter to 0 to hide the agent and to 1 to show the agent on camera. This removes or adds\nthe agent to the main camera and any remote cameras. A non-shown agent can still be visible to\ncreatures, and can still be clicked on or picked up. It just doesn''t appear on the cameras.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ss][Ll][Oo][Ww])\b)'
      comment: 'Negates previous [INST] command, returns control flow to normal execution.'
      scope: entity.name.function.caos

    - match: '(\b([Ss][Nn][Aa][Pp])\b)'
      comment: 'This takes a photograph of the world at a particular place. The zoom parameter should be <= 100.\n100 means at original size, 50 means half size etc. It makes a new image file in the world images\ndirectory - you can use it to make agents and parts as with any image file. Call SNAX first to check\nyour filename isn''t already in use in any images directory. When you have finished with the file,\ncall LOFT.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Ss][Nn][Dd][Cc])\b)'
      comment: 'Plays a controlled sound effect emitted from the target. Updates volume and panning as the agent\nmoves.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ss][Nn][Dd][Ee])\b)'
      comment: 'Play a sound effect audible as if emitted from target''s current location.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ss][Nn][Dd][Ll])\b)'
      comment: 'Play a sound effect as in SNDC, only the sound is looped.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ss][Nn][Dd][Qq])\b)'
      comment: 'As SNDE, only with a delay before playing.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ss][Oo][Uu][Ll])\b)'
      comment: 'Enable (1) or disable (0) the update on the creature''s faculty as given by type id as follows:\nSensory Faculty (0), Brain (1), Motor Faculty (2), Linguistic Faculty (3), Biochemistry (4),\nReproductive Faculty (5), Expressive Faculty (6), Music Faculty (7), Life Faculty (8)'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ss][Pp][Aa][Ss])\b)'
      comment: 'Loads a named {creature} into the named {vehicle}'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ss][Pp][Ii][Nn])\b)'
      comment: 'Rotate to a particular facing.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ss][Pp][Nn][Ll])\b)'
      comment: 'This sets the input of the neuron in the lobe specified to be the value given.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ss][Tt][Aa][Rr])\b)'
      comment: 'Pick a random object that can be seen by [OWNR] object matching the given family genus species'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ss][Tt][Ee][Pp])\b)'
      comment: 'Does one update of the specified faculty (for faculty id see SOUL#).'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Ss][Tt][Ii][Mm])\s*([Ss][Hh][Oo][Uu])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Shout a stimulus to all creatures who can hear [OWNR].\nThe strength is a multiplier for the\nstimulus. Set to 1 for a default stimulation, 2 for a stronger stimulation and so on. It is\nimportant you use this, rather than send several stims, as it affects learning. Set strength to 0 to\nprevent learning altogether, and send a strength 1 chemical change. See the table of Stimulus\nNumbers.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Ss][Tt][Ii][Mm])\s*([Ss][Ii][Gg][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Send a stimulus to all creatures who can see [OWNR].'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Ss][Tt][Ii][Mm])\s*([Tt][Aa][Cc][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Send a stimulus to all creatures who are touching [OWNR].'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '([Ss][Tt][Ii][Mm])\s*([Ww][Rr][Ii][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Send stimulus to a specific creature. Can be used from an install script, but the stimulus will be\nfrom NULL, so the creature will react but not learn.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ss][Tt][Oo][Pp])\b)'
      comment: 'Stop execution (eg. following error, or before subroutine definitions start)'
      scope: entity.name.function.caos

    - match: '(\b([Ss][Tt][Pp][Cc])\b)'
      comment: 'Stop any controlled sounds currently playing with this [TARG].'
      scope: entity.name.function.caos

    - match: '(\b([Ss][Tt][Pp][Tt])\b)'
      comment: 'Stops any currently running script in the target agent. See also STOP.'
      scope: entity.name.function.caos

    - match: '(\b([Ss][Tt][Rr][Kk])\b)'
      comment: 'This triggers the music track specified. The track will play for at least latency seconds before\nbeing overridden by room or metaroom music.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ss][Uu][Bb][Rr])\b)'
      comment: 'Identifies a Subroutine. ''label'' is a 4-char unique label name [GSUB] takes us to point AFTER\n[SUBR] labl, so only reach here through normal code flow.\nTherefore, treat [SUBR] the same as [STOP]\n([STOP] is therefore not needed before the start of any subroutines).'
      scope: keyword.control.caos
      push: [token]

    - match: '(\b([Ss][Uu][Bb][Vv])\b)'
      comment: 'Subtracts an integer or float from a variable, so var = var - sub.'
      scope: entity.name.function.caos
      push: [rvalue,lvalue]

    - match: '(\b([Ss][Vv][Ee][Ll])\b)'
      comment: 'Set sideways velocity.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '([Ss][Ww][Aa][Yy])\s*([Ss][Hh][Oo][Uu])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Stimulate all creatures that can hear OWNR to adjust four drives by the given amounts.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Ss][Ww][Aa][Yy])\s*([Ss][Ii][Gg][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Stimulate all creatures that can see OWNR to adjust four drives by the given amounts.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Ss][Ww][Aa][Yy])\s*([Tt][Aa][Cc][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Stimulate all creatures that are touching OWNR to adjust four drives by the given amounts.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '([Ss][Ww][Aa][Yy])\s*([Ww][Rr][Ii][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Stimulate a specific creature to adjust four drives by the given amounts.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Tt][Aa][Rr][Gg])\b)'
      comment: 'Sets the current object of script focus.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Tt][Ii][Cc][Kk])\b)'
      comment: 'Sets the object timer script tick rate. Set TICK to 0 to stop the timer script executing.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Tt][Ii][Nn][Oo])\b)'
      comment: 'Like TINT but only tints the current frame. The other frames are no longer available in the\ngallery, it becomes a one frame sprite file. Original display engine only.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Tt][Ii][Nn][Tt])\b)'
      comment: 'This tints the TARG agent with the r,g,b tint and applies the colour rotation and swap as per\npigment bleed genes. Specify the PART first for compound agents. The tinted agent or part now uses a\ncloned gallery, which means it takes up more memory, and the save world files are larger. However it\nalso no longer needs the sprite file. Also, tinting resets camera shy and other properties of the\ngallery.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Tt][Nn][Tt][Ww])\b)'
      comment: 'This tints the TARG agent with the global tint manager at index. Specify the PART first for\ncompound agents. See also TINT.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Tt][Oo][Uu][Cc])\b)'
      comment: 'Reach out and touch [_IT_], normally preceded with an [APPR] macro.\nContinue with next instruction\nwhen you have successfully touched [_IT_].\nIf total failure (object gone away) then present action\nschema is suppressed.'
      scope: entity.name.function.caos

    - match: '(\b([Tt][Rr][Aa][Nn])\b)'
      comment: 'Sets pixel transparency awareness. 1 for pixel perfect, so transparent parts of the agent can''t be\nclicked. 0 to allow anywhere on the agent rectangle to be clicked. See also the option parameter on\nPAT: BUTT which overrides this.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Tt][Rr][Cc][Kk])\b)'
      comment: 'Camera follows the given agent. Set to NULL to stop tracking. x% and y% are percentages (0-100) of\nthe screen size. They describe a rectangle centred on the screen which the target stays\nwithin.\nStyle 0 is brittle - if you move the camera so the target is out of the rectangle, then the\ntracking is broken.\nStyle 1 is flexible - you can move the camera away from the target. If you move\nit back, then tracking resumes.\nStyle 2 is hard - you can''t move the camera so the target is out of\nthe rectangle.\nThe transition is the sort of fade to use if the tracking causes a change in meta\nroom. The values are the same as for the transition in the META command.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Tt][Tt][Aa][Rr])\b)'
      comment: 'Randomly chooses an agent which matches the given classifier and is touching the owner of the\nscript. It then sets TARG to that agent. See ETCH.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Uu][Cc][Ll][Nn])\b)'
      comment: 'Make sure that an agent isn''t cloned anymore, this releases the memory taken up by TINTing it.\nAgents are usually cloned for purposes such as tinting. Don''t forget to set the relevant PART\nnumber for compound agents.'
      scope: entity.name.function.caos

    - match: '(\b([Uu][Nn][Cc][Ss])\b)'
      comment: 'Make the creature conscious or unconscious. 0 for conscious, 1 for unconscious.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Uu][Nn][Ll][Kk])\b)'
      comment: 'Enables the execution of other event scripts on this object. This should be paired with command\nLOCK.'
      scope: entity.name.function.caos

    - match: '(\b([Uu][Nn][Tt][Ll])\b)'
      comment: 'Part of a LOOP-UNTL statement. Repeat loop unless condition is true.\nValid relations are:\nEQ –\nEqual\nNE – Not equal\nGT – Greater than\nLT – Less than\nGE – Greater than or equal to \nLE –\nLess than or equal to \nBT – Bit-wise AND function \nBF – Bit-wise NAND function'
      scope: keyword.control.caos
      push: [rvalue, eqOp, rvalue]

    - match: '([Uu][Rr][Gg][Ee])\s*([Ss][Hh][Oo][Uu])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Urge all creatures who can hear OWNR to perform the verb_id action on OWNR. Stimuli can range from\n-1 to 1, ranging from discourage to encourage.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Uu][Rr][Gg][Ee])\s*([Ss][Ii][Gg][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Urge all creatures who can see OWNR to perform an action on OWNR.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Uu][Rr][Gg][Ee])\s*([Tt][Aa][Cc][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Urge all creatures who are touching OWNR to perform an action on OWNR.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '([Uu][Rr][Gg][Ee])\s*([Ww][Rr][Ii][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Urge a specific creature to perform a specific action on a specific noun. A stimulus greater than 1\nwill force the Creature to perform an action, or to set its attention (mind control!). Use an id -1\nand stim greater than 1 to un-force it.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Vv][Aa][Rr][Cc])\b)'
      comment: '[not implemented yet]'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Vv][Ee][Ll][Oo])\b)'
      comment: 'Set velocity, measured in pixels per tick.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Vv][Oo][Cc][Bb])\b)'
      comment: 'Learn all vocabulary instantly.'
      scope: entity.name.function.caos

    - match: '(\b([Vv][Oo][Ii][Cc])\b)'
      comment: 'This sets the TARG agent''s voice to the specified creature voice, using standard cascade\ntechniques to select the nearest match. On failure, "DefaultVoice" will be reloaded. Use SEZZ to\nactually say something.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Vv][Oo][Ii][Ss])\b)'
      comment: 'Sets the TARG agent''s voice to the specified value. The voice name must be valid in the catalogue.\nIf it fails, then "DefaultVoice" will be reloaded. Use SEZZ to actually say something.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Vv][Oo][Ll][Mm])\b)'
      comment: 'Set overall the volume of the sound effects (channel 0), the MIDI (channel 1) or the generated\nmusic (channel 2). Values range from -10000 (silent) to 0 (loudest).'
      scope: entity.name.function.caos
      push: [rvalue,rvalue]

    - match: '(\b([Ww][Aa][Ii][Tt])\b)'
      comment: 'Wait for the specified number of game ticks before continuing with next instruction. A tick is\nroughly 1/10 sec'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ww][Aa][Ll][Kk])\b)'
      comment: 'Walk indefinitely. Chose a walking gait according to chemo-receptors, then start walking.\nIf\nextraspective you’ll continuously walk towards [_IT_], but the command is primarily for\nintrospective walking.'
      scope: entity.name.function.caos

    - match: '(\b([Ww][Dd][Oo][Ww])\b)'
      comment: 'Toggle full screen mode.'
      scope: entity.name.function.caos

    - match: '(\b([Ww][Ee][Aa][Rr])\b)'
      comment: 'Sets a layer of clothing on part of the creature. The set_number is the type of clothing to put on\nfrom the overlay file - think of it as an outfit number. layer 0 is the actual body of the creature,\nso unless you want to replace the body part itself use a higher layer. Higher layers are on top of\nlower ones. e.g. 0 for a face, 1 for measles spots, 2 for a fencing mask. See also BODY and NUDE.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '(\b([Ww][Ee][Bb][Bb])\b)'
      comment: 'Launches an external URL in the user''s browser. The game engine adds http:// at the beginning to\nprevent malicious launching of programs, so you just need to specify the domain name and path.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ww][Pp][Aa][Uu])\b)'
      comment: 'Stops world ticks from running. Days, seasons and years won''t change and any delayed messages are\npaused, as are CAs and some sound effects. Set to 1 to pause, 0 to run. Use along with PAUS.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ww][Rr][Ll][Dd])\b)'
      comment: 'Creates a new world directory for the specified world.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Ww][Tt][Nn][Tt])\b)'
      comment: 'This sets up the world (global) tint table. The index is the number associated with the tint table\n- (keep it small please) and the r,g,b is the tint level. Rotation and Swap work as for pigment\nbleed genes.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]

    - match: '(\b([Zz][Oo][Mm][Bb])\b)'
      comment: 'Make or undo the creature''s zombification factor. 1 makes creatures zombies: in a zombie state\ncreatures won''t process any decision scripts but they will respond to ANIMs and POSEs. 0\numzombifies.'
      scope: entity.name.function.caos
      push: [rvalue]

    - match: '(\b([Zz][Oo][Oo][Mm])\b)'
      comment: 'Zoom in on the specified position by a negative amount of pixels or out by positive amount of\npixels. If you send -1 as the x and y coordinates then the camera zooms in on the existing view port\ncentre. This only applies to remote cameras.'
      scope: entity.name.function.caos
      push: [rvalue,rvalue,rvalue]

    - match: '\b([Aa][Nn][Dd]|[Oo][Rr])\b'
      scope: keyword.operator.word
      push: [rvalue, eqOp, rvalue]
      comment: Joins two equality statements
    - match: '\s+'
      scope: text

    - match: '\b([^ ]+)\b'
      scope: invalid.illegal.caos
      pop: true


  lvalue:
    - match: '\s*\*.*$'
      scope: comment.line.caos
    - match: '([_][Pp][1][_])'
      comment: 'First macro script parameters specified in command [MESG WRT+].'
      scope: variable.language.caos.lvalue
      pop: true

    - match: '([_][Pp][2][_])'
      comment: 'Second macro script parameters specified in command [MESG WRT+]'
      scope: variable.language.caos.lvalue
      pop: true

    - match: '(\b([Aa][Tt][Tt][Rr])\b)'
      comment: 'Sets/returns an objects Attributes'
      pop: true
      scope: variable.language.member.caos.lvalue.integer

    - match: '(\b([Aa][Vv][Aa][Rr])\b)'
      comment: 'This is the OVxx variable of the agent passed in. It is equivalent to target agent, OVxx, but means\nthat you don''t need to target it first :) You can also use them to implement primitive arrays.'
      scope: variable.language.caos.lvalue
      set: [rvalue,rvalue]

    - match: '(\b([Ee][Aa][Mm][Ee])\b)'
      comment: 'Very similar to GAME variables only they aren''t saved or loaded with the world; they keep their\nvalue between worlds for one session of the engine. The E in EAME stands for for Engine. See the\ntable of engine Eame Variables.'
      scope: variable.language.caos.lvalue
      set: [rvalue]

    - match: '(\b([Ff][Rr][Oo][Mm])\b)'
      comment: 'If we''re processing a message, this is the OWNR who sent the message. NULL if the message was sent\nfrom an injected script or an install script. If the message was sent over the network using NET:\nWRIT, then this contains the user id of the sender, as a string.'
      pop: true
      scope: variable.language.member.caos.lvalue.agent

    - match: '(\b([Gg][Aa][Mm][Ee])\b)'
      comment: 'A game variable is a global variable which can be referenced by name.\neg: SETV GAME "pi" 3.142\nGame\nvariables are stored as part of the world and so will be saved out in the world file. If a script\nuses a non-existent game variable, that variable will be created automatically (with undefined\ncontents). Agents, integers, floats and strings can be stored in game variables. Variable names are\ncase sensitive.\nThere are some conventions for the variable names:\nengine_ for Creatures Engine\ncav_\nfor Creatures Adventures\nc3_ for Creatures 3\nIt''s important to follow these, as 3rd party\ndevelopers will just use whatever names they fancy. DELG deletes a game variable. See also the table\nof engine Game Variables.'
      scope: variable.language.caos.lvalue
      set: [rvalue]

    - match: '(\b([Mm][Aa][Mm][Ee])\b)'
      comment: 'Machine variable version of NAME. Accesses the same variables, only via OWNR rather than TARG. This\nis the same difference as between MVxx and OVxx.'
      scope: variable.language.caos.lvalue
      set: [rvalue]

    - match: '(\b([Mm][Vv][0-9][0-9])\b)'
      comment: 'MV00 to MV99 are variables specific to an agent. They are read from [OWNR], the owner agent of the\ncurrent script. These are the exact same variables as [OVxx], except read from [OWNR] not [TARG]. If\n[OWNR] and [TARG] are the same, then OV23 is MV23, for example.\n@range(0 to 99)'
      scope: variable.other.member.caos
      pop: true

    - match: '(\b([Nn][Aa][Mm][Ee])\b)'
      comment: 'This is a named variable, similar to a GAME variable, only local to the target agent. See also\nMAME. The "name" of the variable is not limited to strings, but can be anything stored in a\nvariable. i.e. integer, float, string, even an agent.'
      scope: variable.language.caos.lvalue
      set: [rvalue]

    - match: '(\b([Nn][Oo][Rr][Nn])\b)'
      comment: 'Returns the creature currently selected by the user.'
      pop: true
      scope: variable.language.member.caos.lvalue.agent

    - match: '(\b([Oo][Vv][0-9][0-9])\b)'
      comment: 'OV00 to OV99 are variables specific to an agent. They are read from [TARG], the target agent. You\ncan also access these same variables via [OWNR] using [MVxx].\n@range(0 to 99)'
      scope: variable.other.member.caos
      pop: true

    - match: '(\b([Vv][Aa][0-9][0-9])\b)'
      comment: 'VA00 to VA99 are local variables, whose values are lost when the current script ends.\n@range(0 to\n99)'
      scope: variable.other.member.caos
      pop: true

    - match: '(\b([Vv][Ee][Ll][Xx])\b)'
      comment: 'Horizontal velocity in pixels per tick - floating point.'
      pop: true
      scope: variable.language.member.caos.lvalue.integer

    - match: '(\b([Vv][Ee][Ll][Yy])\b)'
      comment: 'Vertical velocity in pixels per tick - floating point.'
      pop: true
      scope: variable.language.member.caos.lvalue.integer
    - match: '\s+'
      scope: text

    - match: '\b([^ ]+)\b'
      scope: invalid.illegal.caos
      pop: true


  rvalue:
    - match: '\s*\*.*$'
      scope: comment.line.caos

    # Strings begin and end with quotes, and use backslashes as an escape
    # character
    - match: '"'
      scope: punctuation.definition.string.begin.caos
      set: double_quoted_string

    - match: ''''
      scope: punctuation.definition.character.begin.caos
      set: char

    - match: '(\[)([^\]]*)(\])'
      scope: string.quoted.other.c1.caos
      pop: true

     # Numbers
    - match: '[-+]?[0-9]*\.[0-9]+'
      scope: constant.numeric.float.caos
      pop: true

    - match: '\b[-+]?[0-9]+\b'
      scope: constant.numeric.integer.caos
      pop: true

    - match: '%[01]+'
      scope: constant.numeric.integer.binary.caos
      pop: true

    - match: '\s+'
      scope: text

    - match: ','
      scope: punctuation.terminator


    - match: '([_][Cc][Dd][_])\s*([Ff][Rr][Qq][Hh])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the average value for the highest frequencies detected in the CD player for the current\ntick.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([_][Cc][Dd][_])\s*([Ff][Rr][Qq][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the average value for the lowest frequencies detected in the CD player for the current\ntick.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([_][Cc][Dd][_])\s*([Ff][Rr][Qq][Mm])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the average value for the medium frequencies detected in the CD player for the current\ntick.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([_][Ii][Tt][_])'
      comment: 'Object that [OWNR] creature was attending to when the macro was started.\nNote: Only [OWNR]’s IT\ncan be determined, not [TARG]’s.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '([_][Pp][1][_])'
      comment: 'First macro script parameters specified in command [MESG WRT+].'
      scope: variable.language.caos.lvalue
      pop: true

    - match: '([_][Pp][2][_])'
      comment: 'Second macro script parameters specified in command [MESG WRT+]'
      scope: variable.language.caos.lvalue
      pop: true

    - match: '([_][Uu][Pp][_])'
      comment: 'Returns the value of the UP constant.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Aa][Bb][Bb][Aa])\b)'
      comment: 'Returns the absolute base for the current agent/part. Returns -1 if an invalid part. The absolute\nbase is the value passed into [NEW: SIMP] and so on, it is different from the [BASE].'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Aa][Cc][Cc][Gg])\b)'
      comment: 'Returns target''s acceleration due to gravity in pixels per tick squared.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Aa][Cc][Oo][Ss])\b)'
      comment: 'Returns arccosine of {x} in degrees.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Aa][Dd][Dd][Mm])\b)'
      comment: 'Creates a new metaroom with the given coordinates. Specifies the starting background file. Returns\nthe id of the new metaroom.'
      set: [rvalue,rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Aa][Dd][Dd][Rr])\b)'
      comment: 'Creates a new room within a metaroom. Rooms have vertical left and right walls, but potentially\nsloped floors and ceilings. The coordinates specify the exact shape. Returns the id of the new\nroom.'
      set: [rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Aa][Dd][Mm][Pp])\b)'
      comment: 'Get current angular damping. The value is from 0.0 to 1.0 where 0.0 means no damping, 1.0 maximum.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Aa][Ee][Rr][Oo])\b)'
      comment: 'Returns aerodynamic factor as a percentage.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Aa][Gg][Nn][Tt])\b)'
      comment: 'Given a unique identifier, returns the corresponding agent. Returns [NULL] if the agent no longer\nexists. [UNID] extracts the unique id. NOTE: This should only be used for external programs to\npersistently refer to an agent during a session. Variables can use SETA to store agent r-values\ndirectly for internal use. Unique identifiers can change across saved sessions.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Aa][Nn][Gg][Ll])\b)'
      comment: 'Gets the angle (as a fraction of a circle) from [TARG]''s position to the position specified.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Aa][Ss][Ii][Nn])\b)'
      comment: 'Returns arcsine of {x} in degrees.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Aa][Ss][Ll][Pp])\b)'
      comment: 'Returns whether a creature is asleep. When asleep the eyes close and the creature becomes\ninsensible to some stimuli. A change of action automatically wakes creature up again. 0=awake,\n1=asleep'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Aa][Tt][Aa][Nn])\b)'
      comment: 'Returns arctangent of {x} in degrees.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Aa][Tt][Tt][Nn])\b)'
      comment: 'Returns the current focus of attention id of [TARG] creature'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Aa][Tt][Tt][Rr])\b)'
      comment: 'Sets/returns an objects Attributes'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Aa][Vv][Aa][Rr])\b)'
      comment: 'This is the OVxx variable of the agent passed in. It is equivalent to target agent, OVxx, but means\nthat you don''t need to target it first :) You can also use them to implement primitive arrays.'
      scope: variable.language.caos.lvalue
      set: [rvalue,rvalue]

    - match: '(\b([Aa][Vv][Ee][Ll])\b)'
      comment: 'Get current angular velocity.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Bb][Aa][Ss][Ee])\b)'
      comment: 'Returns the BASE image for the current agent/part. Returns -1 if an invalid part.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Bb][Hh][Vv][Rr])\b)'
      comment: 'Returns the creature permissions for the target agent.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Bb][Kk][Dd][Ss])\b)'
      comment: 'Returns a string containing all the background names for the specified metaroom in a comma\nseparated list.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Bb][Kk][Gg][Dd])\b)'
      comment: 'Returns the name of the background file currently shown by the given camera.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Bb][Oo][Dd][Yy])\b)'
      comment: 'Return the set number of the outfit the norn is wearing on the outer most layer or -1 if it is not\nwearing anything'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Bb][Uu][Zz][Zz])\b)'
      comment: 'Returns the ideal interval in milliseconds between each tick. You can find the actual interval with\nRACE.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Bb][Vv][Aa][Rr])\b)'
      comment: 'Returns the variant number for target creature.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Bb][Yy][Ii][Tt])\b)'
      comment: 'Returns 1 if the creature is within reach of the IT agent, or 0 if it isn''t.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Bb][Bb])\b)'
      comment: 'Returns relative position of bottom side of cabin.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Bb][Ll])\b)'
      comment: 'Returns relative position of left side of cabin.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Bb][Pp])\b)'
      comment: 'Returns the plane that passengers of the vehicle are at.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Bb][Rr])\b)'
      comment: 'Returns relative position of right side of cabin.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Bb][Tt])\b)'
      comment: 'Returns relative position of topside of cabin.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Bb][Vv])\b)'
      comment: 'Returns the cabin room number.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Gg][Ee])\b)'
      comment: 'Returns the creatures stage of life.\n0 – embryo\n1 – baby\n2 – child\n3 – adolescent\n4 –\nyouth\n5 – adult\n6 – old\n7 – senile'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Ll][Gg])\b)'
      comment: 'Find out which algorithm is currently being used for the creature TARG to decide which particular\nobject in a category to look at.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Oo][Ss])\b)'
      comment: 'Executes the specified CAOS commands instantly. The local environment (_IT_ VAxx TARG OWNR etc.)\nwill be promoted to the script''s environment if inline is non-zero. If state_trans is non-zero,\nthen FROM and OWNR are propagated, if zero, then the script is run orphaned. CAOS returns the output\nof the script. As you can put multiple scripts through in one call, the output is potentially\nconcatenated. Note that all sets of scripts are executed in the same virtual machine if inline is\nnon-zero, otherwise the virtual machine is reset before each script is passed. The params _p0_ and\n_p1_ are passed in as the parameters to the script, even when inline. You can execute "outv 7 endm\nscrp 3 7 11 6 outv 3 endm outv 9", which will make a script 3 7 11 6 and return "79".\nIf throws is\nnon-zero then the system will throw exceptions, otherwise it will return "***" with report set to\nthe exception sid in the CAOS catalogue TAG. If catches is non-zero then the system will catch any\nrun errors encountered and return them in report, having set the return value to "###" first.'
      set: [lvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Cc][Aa][Rr][Rr])\b)'
      comment: 'Object that’s carrying [OWNR].\nFor carrier of [TARG] see [TCAR]'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Cc][Aa][Tt][Aa])\b)'
      comment: 'Returns the target''s category. This either depends on its classifier as described in CATI, or is\nits own individual override set with CATO.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Tt][Ii])\b)'
      comment: 'Return the category id for the given classifier. The catalogue tag "Agent Classifiers" specifies\nthese, and you can have more than 40. They are tested in order until the first match is found. 39\n(or "unclassified") is always returned if none match.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Aa][Tt][Xx])\b)'
      comment: 'Returns the name of the given category. For example, "toy" or "bad bug". The catalogue tag "Agent\nCategories" stores these. If the id is out of range, CATX returns an empty string.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Cc][Hh][Aa][Rr])\b)'
      comment: 'Returns a character from a string. String indices begin at 1.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Hh][Ee][Mm])\b)'
      comment: 'Returns concentration (0.0 to 1.0) of chemical (1 to 255) in the target creature''s bloodstream.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Cc][Ll][Aa][Cc])\b)'
      comment: 'This returns the CLAC action of the TARG object. If the TARG is in CLIK mode, then the return value\nis -2. Otherwise it is the CLAC action.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Ll][Ii][Kk])\b)'
      comment: 'This returns the CLIK action of the TARG object. If the object is in CLAC mode, then it returns -2,\nelse the return values are as follows:\n0 -> Current click action number (1,2,3)\n1 -> First CLIK\naction.\n2 -> Second CLIK action.\n3 -> Third CLIK action'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Mm][Rr][Xx])\b)'
      comment: 'CaMeRa centre X co-ordinate.\nThe centre x co-ordinate of the camera in world co-ordinates.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Mm][Rr][Yy])\b)'
      comment: 'CaMeRa centre Y co-ordinate.\nThe centre y co-ordinate of the camera in world co-ordinates.\nSYS:\nWPOS\nAttempt to position the game window,\nwith the top left corner being at (x,y) of the screen and\nthe window having dimensions width and height.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Oo][Dd][Ee])\b)'
      comment: 'Returns event script number currently being run by target. Returns -1 if not running anything.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Oo][Dd][Ff])\b)'
      comment: 'Returns family of script currently being run by target. Returns -1 if not running anything.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Oo][Dd][Gg])\b)'
      comment: 'Returns genus of script currently being run by target. Returns -1 if not running anything.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Oo][Dd][Pp])\b)'
      comment: 'Returns the offset into the source code of the next instruction to be executed by the target. Use\nSORC to get the source code. Returns -1 if not running anything.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Cc][Oo][Dd][Ss])\b)'
      comment: 'Returns species of script currently being run by target. Returns -1 if not running anything.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([Cc][Oo][Ss][_])'
      comment: 'Returns cosine of theta. Theta should be in degrees.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Cc][Rr][Ee][Aa])\b)'
      comment: 'Returns 1 if the agent is a creature, 0 if not.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Dd][Aa][Tt][Ee])\b)'
      comment: 'Returns the day within the current season, from 0 to GAME "engine_LengthOfSeasonInDays" - 1. See\nalso HIST DATE.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Dd][Aa][Yy][Tt])\b)'
      comment: 'Returns the current day of the month'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([Dd][Bb][Gg][#])'
      comment: 'Dumps debug information for the virtual machine of target. Whatever the type of the variable, a\nstring is output.\nVariable can be:\n-1 : Whether in INST or not\n-2 : Whether in LOCK or not\n-3 :\nCurrent TARG of virtual machine\n-4 : OWNR - should be the same as our outer TARG\n-5 : FROM - who\nsent the message which is being run\n-6 : IT - if a Creature, where their attention was\n-7 : PART -\npart number being worked on for compound agents\n-8 : _P1_ - first parameter of message, if in a\nmessage\n-9 : _P2_ - second parameter of message, if in a message\n0 to 99 : Local variables VA00 to\nVA99'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Dd][Bb][Gg][Aa])\b)'
      comment: 'Dumps debug information for target. Whatever the type of the variable, a string is output.\nVariable\ncan be:\n0 to 99 : agent variables OV00 to OV99\n-1 : Counter for timer tick'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Dd][Ee][Aa][Dd])\b)'
      comment: 'Creature is dead'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Dd][Ee][Cc][Nn])\b)'
      comment: 'Returns the current focus of decision id.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Dd][Ff][Tt][Xx])\b)'
      comment: 'Returns X coordinate of creature''s down foot.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Dd][Ff][Tt][Yy])\b)'
      comment: 'Returns Y coordinate of creature''s down foot.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Dd][Ii][Rr][Nn])\b)'
      comment: 'Returns the direction the creature is facing.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Dd][Ii][Ss][Qq])\b)'
      comment: 'Returns the square of the distance between the centre points of the target agent, and the other\nagent. It is quicker to compare this square against a squared constant directly, or if you need the\nactual distance use SQRT.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Dd][Oo][Oo][Rr])\b)'
      comment: 'Returns the door permeability between two rooms.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Dd][Oo][Ww][Nn])\b)'
      comment: 'Returns the value of the down constant.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Dd][Rr][Ee][Aa])\b)'
      comment: 'Returns 1 if the creature is asleep and dreaming, 0 otherwise.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Dd][Rr][Ii][Vv])\b)'
      comment: 'Returns the value (0.0 to 1.0) of the specified drive.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '([Dd][Rr][Vv][!])'
      comment: 'Returns the id of the highest drive for the target creature.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ee][Aa][Mm][Ee])\b)'
      comment: 'Very similar to GAME variables only they aren''t saved or loaded with the world; they keep their\nvalue between worlds for one session of the engine. The E in EAME stands for for Engine. See the\ntable of engine Eame Variables.'
      scope: variable.language.caos.lvalue
      set: [rvalue]

    - match: '(\b([Ee][Aa][Mm][Nn])\b)'
      comment: 'Enumerates through EAME variable names, roughly as GAMN does through GAME variables. Start and end\nwith an empty string.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ee][Ll][Aa][Ss])\b)'
      comment: 'Return the elasticity percentage.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ee][Mm][Ii][Dd])\b)'
      comment: 'Returns a string containing all the metaroom ids in the world separated by spaces.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ee][Rr][Ii][Dd])\b)'
      comment: 'Returns a string containing all the room ids in the specified metaroom separated by spaces. Returns\nall rooms in the world if metaroom_id is -1.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ee][Tt][Ii][Kk])\b)'
      comment: 'Returns the number of ticks since the engine was loaded in.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ee][Xx][Pp][Rr])\b)'
      comment: 'Returns the current facial expression index for the creature. Expressions are as follows:\nEXPR_NORMAL = 0, EXPR_HAPPY =1, EXPR_SAD = 2, EXPR_ANGRY= 3, EXPR_SURPRISE = 4, EXPR_SLEEPY = 5,\nEXPR_VERY_SLEEPY = 6, EXPR_VERY_HAPPY = 7, EXPR_MISCHIEVOUS = 8, EXPR_SCARED = 9, EXPR_ILL = 10,\nEXPR_HUNGRY = 11'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ff][Aa][Cc][Ee])\b)'
      comment: 'Returns the front facing pose for the current facial expression. See the FACE string rvalue.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ff][Aa][Cc][Ee])\b)'
      comment: 'Returns the name of the sprite file for the target creature''s face. Currently automatically gives\nyou the youngest age version of the gallery but soon will work in the following way: If you set the\nparameter to -1 you will get the name of the file the creature is currently using. Note that when\nthe creature ages, this file name will change (the GALL command could be useful here). If you set\nthe parameter to a particular age then the filename returned will be the gallery that best matches\nthat age. Use the FACE integer rvalue to get the pose number for facing forwards.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ff][Aa][Ll][Ll])\b)'
      comment: 'Returns 1 if target is moving under the influence of gravity, or 0 if it is at rest.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ff][Dd][Mm][Pp])\b)'
      comment: 'Get current forwards damping. The value is from 0.0 to 1.0 where 0.0 means no damping, 1.0\nmaximum.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ff][Ll][Tt][Xx])\b)'
      comment: 'This returns the X position of the TARG object''s floating vector.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ff][Ll][Tt][Yy])\b)'
      comment: 'This returns the Y position of the TARG object''s floating vector.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ff][Mm][Ll][Yy])\b)'
      comment: 'Returns the object’s family'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ff][Rr][Ii][Cc])\b)'
      comment: 'Return physics friction percentage.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ff][Rr][Oo][Mm])\b)'
      comment: 'If we''re processing a message, this is the OWNR who sent the message. NULL if the message was sent\nfrom an injected script or an install script. If the message was sent over the network using NET:\nWRIT, then this contains the user id of the sender, as a string.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Ff][Tt][Oo][Ii])\b)'
      comment: 'Converts a floating-point value into its integer equivalent.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ff][Vv][Ee][Ll])\b)'
      comment: 'Get current forwards velocity.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ff][Vv][Ww][Mm])\b)'
      comment: 'This returns a guaranteed-safe filename for use in world names, journal file names, etc.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Gg][Aa][Ll][Ll])\b)'
      comment: 'Returns the gallery (sprite file) used by an agent. This works for simple and compound agents\n(using the current PART).'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Gg][Aa][Mm][Ee])\b)'
      comment: 'A game variable is a global variable which can be referenced by name.\neg: SETV GAME "pi" 3.142\nGame\nvariables are stored as part of the world and so will be saved out in the world file. If a script\nuses a non-existent game variable, that variable will be created automatically (with undefined\ncontents). Agents, integers, floats and strings can be stored in game variables. Variable names are\ncase sensitive.\nThere are some conventions for the variable names:\nengine_ for Creatures Engine\ncav_\nfor Creatures Adventures\nc3_ for Creatures 3\nIt''s important to follow these, as 3rd party\ndevelopers will just use whatever names they fancy. DELG deletes a game variable. See also the table\nof engine Game Variables.'
      scope: variable.language.caos.lvalue
      set: [rvalue]

    - match: '(\b([Gg][Aa][Mm][Nn])\b)'
      comment: 'Enumerates through game variable names. Pass in an empty string to find the first one, and then the\nprevious one to find the next. Empty string is returned at the end.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Gg][Mm][Aa][Pp])\b)'
      comment: 'Returns the metaroom id at point x,y on the map. If the point is outside the room system, it\nreturns -1.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Gg][Nn][Aa][Mm])\b)'
      comment: 'Returns the game name. For example "Creatures 3".'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Gg][Nn][Uu][Ss])\b)'
      comment: 'Returns the object''s genus'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Gg][Rr][Aa][Pp])\b)'
      comment: 'Returns the room id at point x,y on the map. If the point is outside the room system, it returns\n-1.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Gg][Rr][Ii][Dd])\b)'
      comment: 'Returns the ID of a room adjacent to the agent in the given direction. A straight line is drawn\nfrom the centre of the agent until it hits a room. Directions are LEFT, RGHT, _UP_, or DOWN. A value\nof -1 is returned if no room can be found.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Gg][Tt][Oo][Ss])\b)'
      comment: 'Returns the target''s moniker in the given gene variable slot. This universally unique identifier\nis the name of a genetics file. Slot 0 is a creature''s actual genome. Other slots are used in\npregnant creatures, eggs and other places.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Hh][Aa][Nn][Dd])\b)'
      comment: 'This returns the name of the hand.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Hh][Ee][Aa][Pp])\b)'
      comment: 'Returns heap and garbage collection information.\n0 - current allocated heap memory (development\nbuilds only)\n1 - total agents, including ones waiting to be garbage collected\n2 - similar, but just\nfor creatures'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Hh][Ee][Ll][Dd])\b)'
      comment: 'Returns the item currently held by the target. For vehicles this returns a random carried agent if\ncarrying more than one. Consider using EPAS instead.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Hh][Gg][Hh][Tt])\b)'
      comment: 'Returns objects height'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Hh][Hh][Ll][Dd])\b)'
      comment: 'Returns the creature currently holding hands with the pointer agent. NULL if no agent is holding\nhands.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Hh][Ii][Rr][Pp])\b)'
      comment: 'Returns id of the room adjacent to this one with the highest concentration of the given CA.\ndirection is 0 for left/right, 1 for any direction.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Cc][Aa][Gg][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the life stage of the creature when the given life event happened.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Cc][Oo][Uu][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the number of life events that there are for the given moniker. Returns 0 of there are no\nevents, or the moniker doesn''t exist.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Cc][Rr][Oo][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the number of crossover points when the genome was made by splicing its parents genomes.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Dd][Aa][Tt][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the day within the current season. This is the same as DATE. See also WTIK and HIST WTIK.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Ff][Ii][Nn][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Searches for a life event of a certain HIST TYPE for the given moniker. The search begins at the\nlife event after the from index. Specify -1 to find the first event. Returns the event number, or -1\nif there is no matching event.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Ff][Ii][Nn][Rr])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Reverse searches for a life event of a certain HIST TYPE for the given moniker. The search begins\nat the life event before the from index. Specify -1 to find the last event. Returns the event\nnumber, or -1 if there is no matching event.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Ff][Oo][Tt][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'For the given life event, returns the filename of the associated photograph, or an empty string if\nthere is no photo.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Gg][Ee][Nn][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the sex that the creature with the given moniker has or had. 1 for male, 2 for female. If\nthe creature hasn''t been born yet, returns -1.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Gg][Nn][Uu][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the genus of the moniker. This is 1 for Norn, 2 for Grendel, 3 for Ettin by convention.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Mm][Oo][Nn][1])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'For the given life event, returns the first associated moniker.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Mm][Oo][Nn][2])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'For the given life event, returns the second associated moniker.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Mm][Uu][Tt][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the number of point mutations the genome received during crossover from its parents.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Nn][Aa][Mm][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the name of the creature with the given moniker.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Nn][Ee][Tt][Uu])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the network identifier of the user when the given life event happened.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Nn][Ee][Xx][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the next moniker which has a history, or an empty string if we''re at the end already. If\nthe specified moniker is an empty string or doesn''t have a history, then the first moniker with a\nhistory entry is returned, or an empty string if there isn''t one.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Pp][Rr][Ee][Vv])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the previous moniker which has a history. If the specified moniker is an empty string or\ndoesn''t have a history, then the last moniker with a history entry is returned, or an empty string\nif there isn''t one.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Rr][Tt][Ii][Mm])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the real world time when the given life event happened. This is measured in seconds since\nmidnight, 1 January 1970 in UTC. To display, use RTIF.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Ss][Ee][Aa][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the current season for a given world tick. This is the same as SEAN. See also WTIK and HIST\nWTIK.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Tt][Aa][Gg][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the age in ticks of the creature when the given life event happened to it. If the creature\nwas not in the world, wasn''t born yet, or was fully dead, then -1 is returned. If the creature was\ndead, but its body still in the world, then its age on death is returned. See also TAGE.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Tt][Ii][Mm][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the time of day for a given world tick. This is the same as TIME. See also WTIK and HIST\nWTIK.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Tt][Yy][Pp][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'For the given life event, returns its type.\nAll histories begin with one of the following four\nevents. You can read the associated monikers with HIST MON1 and HIST MON2.\n0 Conceived - a natural\nstart to life, associated monikers are the mother''s and father''s\n1 Spliced - created using GENE\nCROS to crossover the two associated monikers\n2 Engineered - from a human made genome with GENE\nLOAD, the first associated moniker is blank, and the second is the filename\n14 Cloned - such as when\nimporting a creature that already exists in the world and reallocating the new moniker, when TWINing\nor GENE CLONing; associated moniker is who we were cloned from\nThe following events happen during a\ncreature''s life:\n3 Born - triggered by the BORN command, associated monikers are the parents.\n4\nAged - reached the next life stage, either naturally from the ageing loci or with AGES\n5 Exported -\nemigrated to another world\n6 Imported - immigrated back again\n7 Died - triggered naturally with the\ndeath trigger locus, or by the DEAD command\n8 Became pregnant - the first associated moniker is the\nchild, and the second the father\n9 Impregnated - first associated moniker is the child, second the\nmother\n10 Child born - first moniker is the child, second the other parent\n15 Clone source - someone\nwas cloned from you, first moniker is whom\n16 Warped out - exported through a worm hole with NET:\nEXPO\n17 Warped in - imported through a worm hole\nThese events aren''t triggered by the engine, but\nreserved for CAOS to use with these numbers:\n11 Laid by mother\n12 Laid an egg\n13 Photographed\nOther\nnumbers can also be used for custom life events. Start with numbers 100 and above, as events below\nthat are reserved for the engine. You send your own events using HIST EVNT.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Uu][Tt][Xx][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'For the given life event, returns the user text.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Vv][Aa][Rr][Ii])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the variant that the creature with the given moniker has or had. If the creature hasn''t\nbeen born yet, returns -1.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Ww][Nn][Aa][Mm])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the name of the world the given life event happened in.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Ww][Tt][Ii][Kk])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the world tick when the life event happened, for the world that the event happened in.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Ww][Uu][Ii][Dd])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the unique identifier of the world the given life event happened in.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Hh][Ii][Ss][Tt])\s*([Ww][Vv][Ee][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns 1 if the Creature is a warp hole veteran, 0 otherwise. The creature is a veteran if they\nhave ever been exported with NET: EXPO. They must have been the main exported creature - warping as\nan embryo doesn''t make you a veteran.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Hh][Ii][Ss][Tt])\s*([Yy][Ee][Aa][Rr])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the number of game years elapsed for a given world tick. This is the same as YEAR. See also\nWTIK and HIST WTIK.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Hh][Oo][Tt][Pp])\b)'
      comment: 'Returns the number of the compound part under the pointer. Returns -1 if no agent is under the\npointer, and 0 if the agent is simple or a skeletal creature. Transparency of the parts is ignored,\nso each part is a rectangle. Transparency of the agent as a whole is, however, obeyed. Planes are\nalso ignored, except later part numbers are treated as above earlier ones. See also HOTS to find the\nagent under the pointer.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Hh][Oo][Tt][Ss])\b)'
      comment: 'Returns the agent nearest the screen under the hotspot of the pointer. For each agent, TRAN decides\nwhether this allows for transparent pixels.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Ii][Ii][Tt][Tt])\b)'
      comment: 'Returns the target creature''s current agent of attention. Compare _IT_.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Ii][Mm][Ss][Kk])\b)'
      comment: 'Returns the input event mask.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ii][Nn][Nn][Ff])\b)'
      comment: 'Retrieves a float from the input stream, delimited by white space. Defaults to 0.0 if no valid\ndata.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ii][Nn][Nn][Ii])\b)'
      comment: 'Retrieves an integer from the input stream, delimited by white space. Defaults to 0 if no valid\ndata.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ii][Nn][Nn][Ll])\b)'
      comment: 'Retrieves a line of text from the input stream.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ii][Nn][Oo][Kk])\b)'
      comment: 'Returns 1 if the input stream is good, or 0 if it is bad. A bad stream could be a non existent\nfile, or the end of file reached. If the stream has never been opened at all, an error is\ndisplayed.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([Ii][Nn][Ss][#])'
      comment: 'Returns the number of instincts the creature still has left to process. Instincts are processed in\nthe egg and during sleep.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ii][Tt][Oo][Ff])\b)'
      comment: 'Converts an integer value into its floating-point equivalent.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Kk][Ee][Yy][Dd])\b)'
      comment: 'Returns 1 if the specified key is currently pressed down, 0 if not.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ll][Ee][Ff][Tt])\b)'
      comment: 'Returns the value of the left constant.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ll][Ii][Mm][Bb])\b)'
      comment: 'Returns the filename for the specified part of a creature. If the exact part isn''t present, a\n''nearby'' file which is on the disk is returned.'
      set: [rvalue,rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ll][Ii][Nn][Kk])\b)'
      comment: 'Returns the permiability of the link between the rooms specified or 0 if no link exists.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ll][Oo][Cc][Ii])\b)'
      comment: 'Reads a biochemical locus value.'
      set: [rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ll][Oo][Ff][Tt])\b)'
      comment: 'Declares that you have finished with a photograph image file taken by SNAP. If the file is in use\nin a gallery, this function fails and returns 1. Otherwise it returns 0. The file will be marked for\nthe attic, and moved there later.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ll][Oo][Rr][Pp])\b)'
      comment: 'Returns id of the room adjacent to this one with the lowest concentration of the given CA.\ndirection is 0 for left/right, 1 for any direction.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ll][Oo][Ww][Aa])\b)'
      comment: 'Converts the given string into all lower case letters.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Mm][Aa][Mm][Ee])\b)'
      comment: 'Machine variable version of NAME. Accesses the same variables, only via OWNR rather than TARG. This\nis the same difference as between MVxx and OVxx.'
      scope: variable.language.caos.lvalue
      set: [rvalue]

    - match: '(\b([Mm][Aa][Pp][Hh])\b)'
      comment: 'Returns the total height of the map.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Aa][Pp][Ww])\b)'
      comment: 'Returns the total width of the map.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Ee][Tt][Aa])\b)'
      comment: 'Returns the metaroom id that the current camera is looking at.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Ii][Nn][Dd])\b)'
      comment: 'Returns whether the creature TARG''s brain is being processed or not.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Ii][Rr][Aa])\b)'
      comment: 'Is the current sprite for this agent mirrored (returns 1) or not (returns 0)'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Ll][Oo][Cc])\b)'
      comment: 'Returns the location of the specified metaroom as a string formatted as follows: x y width height.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Mm][Mm][Ss][Cc])\b)'
      comment: 'Returns the name of the music track played at the metaroom in the given location.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Mm][Oo][Dd][Uu])\b)'
      comment: 'Returns a string listed the loaded modules, and the display engine type. You can use SINS to parse\nthis for particular values.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Mm][Oo][Nn][Tt])\b)'
      comment: 'Returns the month of the year'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Oo][Pp][Xx])\b)'
      comment: 'Returns x position of mouse in world coordinates.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Oo][Pp][Yy])\b)'
      comment: 'Returns y position of mouse in world coordinates.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Oo][Tt][Rr])\b)'
      comment: 'Returns whether the creature TARG''s motor faculty is being processed or not.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Oo][Vv][Ss])\b)'
      comment: 'Returns the movement status of the target.\n0 Autonomous\n1 Mouse driven\n2 Floating\n3 In vehicle\n4\nCarried'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Oo][Vv][Xx])\b)'
      comment: 'Returns horizontal mouse velocity.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Mm][Oo][Vv][Yy])\b)'
      comment: 'Returns vertical mouse velocity.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Mm][Oo][Ww][Ss])\b)'
      comment: 'Returns whether the lawn was cut last Sunday or not.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Ss][Ee][Cc])\b)'
      comment: 'Returns a time stamp measured in milliseconds. It is not specified when the time is measured from;\nthe stamp is only guaranteed to be consistent during one session.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Tt][Hh][Xx])\b)'
      comment: 'This returns the X position of the TARG creature''s mouth attachment point in absolute (map)\ncoordinates.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Mm][Tt][Hh][Yy])\b)'
      comment: 'This returns the Y position of the TARG creature''s mouth attachment point in absolute (map)\ncoordinates.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Mm][Tt][Oo][Aa])\b)'
      comment: 'Returns the agent which references the given moniker. The moniker could be stored in any of the\ngene slots for that agent, including the special slot 0 for a creature. If the moniker is not\ncurrently used in the game, then returns NULL. This command can be slow - use MTOC if possible.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Mm][Tt][Oo][Cc])\b)'
      comment: 'Returns the creature with the given moniker. If there is no agent alive with that moniker, then\nreturns NULL. See also MTOA.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Mm][Uu][Tt][Ee])\b)'
      comment: 'This returns (and potentially sets) the mute values for the sound managers in the game. Sensible\nsettings for the parameters are as follows:\nandMask  eorMask returns\n0 3 3 - Mutes both sound and\nmusic\n3  0 0 for no mute\n1 for sound muted\n2 for music muted\n3 for both muted\nSets\nnothing\n1 2 Returns 2 for music muted, or 3 for both muted\nOnly sets mute on music, leaves sound\nalone'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Mm][Vv][0-9][0-9])\b)'
      comment: 'MV00 to MV99 are variables specific to an agent. They are read from [OWNR], the owner agent of the\ncurrent script. These are the exact same variables as [OVxx], except read from [OWNR] not [TARG]. If\n[OWNR] and [TARG] are the same, then OV23 is MV23, for example.\n@range(0 to 99)'
      scope: variable.other.member.caos
      pop: true

    - match: '(\b([Nn][Aa][Mm][Ee])\b)'
      comment: 'This is a named variable, similar to a GAME variable, only local to the target agent. See also\nMAME. The "name" of the variable is not limited to strings, but can be anything stored in a\nvariable. i.e. integer, float, string, even an agent.'
      scope: variable.language.caos.lvalue
      set: [rvalue]

    - match: '(\b([Nn][Cc][Ll][Ss])\b)'
      comment: 'Finds the next agent in the agent list which also matches the given classifier. If the previous\nagent doesn''t exist or doesn''t match the classifier then the first agent matching it is returned.\nIf none match the classifier, then NULL is returned.'
      set: [rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.agent

    - match: '([Nn][Ee][Tt][:])\s*([Ee][Rr][Rr][Aa])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns an error code from the last command. Currently NET: LINE is the only command to set\nit.\nError codes are:\n0 - Unknown\n1 - Connection OK\n2 - Connection failed, you or the server are\noffline\n3 - Connection failed, invalid user name/password\n4 - Connection failed, you are already\nlogged in elsewhere\n5 - Connection failed, too many users for server\n6 - Connection failed, internal\nerror\n7 - Connection failed, new client version required.\nTry [NET: RAWE] for more detailed\ndiagnostic codes.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([Nn][Ee][Tt][:])\s*([Ee][Xx][Pp][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Transwarp the target creature to the given user. The Creature is exported to the warp out\ndirectory; this command is very similar to PRAY EXPO. Return value is one of the following:\n0 for\nsuccess\n1 if the creature, or if pregnant any of its offspring, are already on disk in some form.\nThis case won''t happen much, if you use a special chunk name like WARP.\n2 if the user hasn''t been\nonline in this world yet / since the user name changed, so we don''t know who they are.\nWhen\nreceiving a creature, use NET: FROM to find out who sent it.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Nn][Ee][Tt][:])\s*([Ff][Rr][Oo][Mm])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'The user who sent the PRAY file which contains the specified resource. If the resource did not\narrive as a message over the network via NET: MAKE or NET: EXPO, then this returns an empty string.\nThe user returned by this command is guaranteed in a way that looking at the content of the PRAY\nfile would not be. For example, the "Last Network User" attribute in an exported Creature made with\nNET: EXPO could be faked.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Nn][Ee][Tt][:])\s*([Hh][Oo][Ss][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the hostname, port, id and friendly name on that host that we are currently connected to,\nor empty string if offline. The fields are space separated, although the last field (friendly name)\nmay contain spaces.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Nn][Ee][Tt][:])\s*([Ll][Ii][Nn][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns 1 if you are connected to the Babel server, or 0 if you aren''t.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([Nn][Ee][Tt][:])\s*([Mm][Aa][Kk][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Like PRAY MAKE, only sends the made pray file to the specified user. This will arrive in their\ninbox, where it can be read with normal PRAY commands and deleted with PRAY KILL.'
      set: [lvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Nn][Ee][Tt][:])\s*([Pp][Aa][Ss][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the currently set username, as selected with PASS.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Nn][Ee][Tt][:])\s*([Rr][Aa][Ww][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns an internal error code from Babel. Only use this for display and diagnostic purpose, use\nNET: ERRA for documented error codes which you can rely on.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([Nn][Ee][Tt][:])\s*([Uu][Ll][Ii][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns 1 if the specified user is online, or 0 if they are offline. This is slow (i.e. has to call\nthe server) unless the user is in the whose wanted register of any agent. Use NET: WHON to add a\nuser to the register.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Nn][Ee][Tt][:])\s*([Uu][Ss][Ee][Rr])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the user''s numeric Babel id, or an empty string if they have never logged in with this\nworld since they last changed user name.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Nn][Ee][Tt][:])\s*([Ww][Hh][Aa][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'For debugging only. Returns a string describing what the upload/query network thread is currently\ndoing. For example, it may be fetching a random online user, or uploading some creature history.\nReturns an empty string if it is doing nothing.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Nn][Oo][Rr][Nn])\b)'
      comment: 'Returns the creature currently selected by the user.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Nn][Pp][Gg][Ss])\b)'
      comment: 'Returns the number of available pages for current text part.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Nn][Uu][Ll][Ll])\b)'
      comment: 'Returns a null agent pointer.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Nn][Ww][Ll][Dd])\b)'
      comment: 'Returns the number of world directories.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Oo][Bb][Ss][Tt])\b)'
      comment: 'Returns the distance from the agent to the nearest wall that it might collide with in the given\ndirection. Directions are LEFT, RGHT, _UP_, or DOWN. If the distance to the collision is greater\nthan RNGE then a very large number is returned.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Oo][Oo][Ww][Ww])\b)'
      comment: 'Returns the status of the moniker.\n0 - never existed, or history purged\n1 - genome referenced by a\nslot, for example an egg\n2 - creature made with NEW: CREA\n3 - creature properly BORN\n4 - out of\nworld, exported\n5 - dead, body still exists\n6 - dead, body KILLed\n7 - unreferenced genome'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Oo][Rr][Gg][Ff])\b)'
      comment: 'Returns floating point data about the specified organ. The organ number is from 0 to ORGN - 1. The\ndata parameter specifies what information is returned:\n0 - Clock rate in updates per tick (as\nlocus)\n1 - Short term life force as a proportion of initial (as locus)\n2 - Factor to modulate rate\nof repair (as locus)\n3 - Injury to apply (as locus)\n4 - Initial life force, a million is the largest\ninitial value\n5 - Short term life force, temporary damage\n6 - Long term life force, permanent\ndamage\n7 - Long term rate damage during repair\n8 - Energy cost to run this organ, calculated from\nthe number of receptors, emitters and reactions\n9 - Damage done to the organ if no energy is\navailable'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Oo][Rr][Gg][Ii])\b)'
      comment: 'Returns integer data about the specified organ. The organ number is from 0 to ORGN - 1. The data\nparameter specifies what information is returned:\n0 - receptor count\n1 - emitter count\n2 - reaction\ncount.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Oo][Rr][Gg][Nn])\b)'
      comment: 'Returns the number of organs in the creature'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Oo][Vv][0-9][0-9])\b)'
      comment: 'OV00 to OV99 are variables specific to an agent. They are read from [TARG], the target agent. You\ncan also access these same variables via [OWNR] using [MVxx].\n@range(0 to 99)'
      scope: variable.other.member.caos
      pop: true

    - match: '(\b([Oo][Ww][Nn][Rr])\b)'
      comment: 'default object (owner of script, or pet if [DDE])'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Pp][Aa][Cc][Ee])\b)'
      comment: 'Returns the tick rate satisfaction factor.\nFactor 1 - ticks are taking the time we would expect\nthem to, which is 0.05 secs.\nFactor more than 1 - the engine is running too slowly.\nFactor less than\n1 - the engine is leaving spare processing time.\nThis is averaged over the last 10 ticks.\nAgents can\nlook at this to adjust the resources they use according to current spare processing time. For\nexample, if you have a random snowflake generator in winter, you could increase the chance of\ngeneration if PACE is low, and decrease the chance if PACE is high. When you do this remember that\ncomputers will be arbitrarily faster in the future, so you should place an extra upper limit on the\nnumber of snowflakes to stop them filling the whole screen.\nNote that PACE only measures the time\nthe engine takes for tick processing, not for handling requests from external applications, or\nadding Windows events to its internal queue. Because of this, you should aim for a value which is a\nbit less than 1.\nCompare RACE.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Pp][Aa][Gg][Ee])\b)'
      comment: 'Returns the current page for current text part. See the PAGE command for more information.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Aa][Rr][Tt])\b)'
      comment: 'Returns 1 if the given part number exists on the TARG agent and 0 if it does not.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Aa][Uu][Ss])\b)'
      comment: 'Returns 1 if the target agent is paused, or 0 otherwise.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Aa][Ww][Ss])\b)'
      comment: 'Returns 1 for debug pawsed, 0 for playing. See DBG: PAWS.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Cc][Ll][Ss])\b)'
      comment: 'Same as NCLS, only cycles the other way.'
      set: [rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Pp][Ee][Rr][Mm])\b)'
      comment: 'Returns the target''s map permiability.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Ll][Nn][Ee])\b)'
      comment: 'Returns the screen depth plane of the principal part.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Nn][Tt][Rr])\b)'
      comment: 'The hand/pointer object.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Pp][Nn][Xx][Tt])\b)'
      comment: 'Returns the next compound PART on an agent. Start by calling it with -1 to get the first part, and\nit finishes by returning -1 when it reaches the end.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Oo][Ss][Bb])\b)'
      comment: 'Returns bottom position of target''s bounding box.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Pp][Oo][Ss][Ee])\b)'
      comment: 'Returns the objects (or parts) pose – i.e. which image number it is currently using'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Oo][Ss][Ll])\b)'
      comment: 'Returns left position of target''s bounding box.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Pp][Oo][Ss][Rr])\b)'
      comment: 'Returns right position of target''s bounding box.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Pp][Oo][Ss][Tt])\b)'
      comment: 'Returns top position of target''s bounding box.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Pp][Oo][Ss][Xx])\b)'
      comment: 'Returns X position of centre of target.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Pp][Oo][Ss][Yy])\b)'
      comment: 'Returns Y position of centre of target.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '([Pp][Rr][Aa][Yy])\s*([Aa][Gg][Tt][Ii])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This returns the value of the integer tag associated with the named resource. If the resource does\nnot contain such a tag, then the default value specified is returned. This call pairs with PRAY\nAGTS.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Aa][Gg][Tt][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This returns the value of the string tag associated with the named resource. If the resource does\nnot contain such a tag, then the default value specified is returned. This call pairs with PRAY\nAGTI.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Pp][Rr][Aa][Yy])\s*([Bb][Aa][Cc][Kk])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Like PRAY PREV, only doesn''t loop at the end. If you go beyond the first entry then it returns an\nempty string.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Pp][Rr][Aa][Yy])\s*([Cc][Oo][Uu][Nn])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This returns the number of resource chunks which are tagged with the resource type passed in.\nResource types are four characters only. Anything over that length will be silently truncated.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Dd][Ee][Pp][Ss])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This performs a scan of the specified resource, and checks out the dependency data. The primary use\nfor this would be in the preparation for injection of agents. If you pass zero in the do_install\nparameter, then the dependencies are only checked. If do_install is non-zero, then they are\ninstalled also. The return values are as follows:\n0 = Success\n-1 = Agent Type not found\n-2 =\nDependency Count not found\n-3 to -(2 + count) is the dependency string missing\n-(3+count) to\n-(2+2*count) is the dependency type missing\n2*count to 3*count is the category ID for that\ndependency being invalid\n1 to count is the dependency failing'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Ee][Xx][Pp][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This function exports the target creature. If the creature is exported successfully then it has\nbeen removed from the world. Returns value is one of the following:\n0 for success\n1 if the creature,\nor if pregnant any of its offspring, are already on disk in some form.\nThe chunk type should be used\nto find the creature again to import it. In Creatures 3, most exported creatures have a chunk type\nEXPC, and the starter family uses SFAM.\nFor new games, you should not use SFAM, as its data would\nget confused with that of an EXPC with the same moniker. This is for backwards compatibility with\nCreatures 3''s use of SFAM, which works because the CAOS code guarantees different monikers.\nFor\nother chunk names, creatures exported with a different type are kept entirely separately, and will\nnot get confused with each other. The chunk type is added to the end of the moniker to form the\nchunk name.\nThe exported creature has some fields associated with it, that can be read by PRAY AGTI\nor PRAY AGTS before importing:\n"Exported At World Time" integer\n"Creature Age In Ticks"\ninteger\n"Exported At Real Time" integer\n"Creature Life Stage" integer\n"Exported From World Name"\nstring\n"Exported From World UID" string\n"Native Network User" string\n"Last Network User" (could be\nfaked, NET: FROM is safer) string\n"Creature Name" string\n"Gender" integer\n"Genus" integer\n"Variant"\ninteger\n"Head Gallery" string (this is calculated on the sending computer, so the file may be\nmissing on the receiving one - try LIMB instead)\n"Pregnancy Status" integer\nIn addition you can add\ncustom fields by setting NAME variables on the Creature before export. Any strings or integers whose\nname begin "Pray Extra " are added as entries to the export file.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Ff][Ii][Ll][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This performs the "installation" of one file from the resource files. The resource_type is defined\nin the agent resource guide. If do_install is zero, the command simply checks if the file install\nshould succeed. Return value is 0 for success, 1 for error.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Ff][Oo][Rr][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Like PRAY NEXT, only doesn''t loop at the end. If you go beyond the last entry then it returns an\nempty string.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Pp][Rr][Aa][Yy])\s*([Ii][Mm][Pp][Oo])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This function imports the creature with the requested moniker and chunk type. Returns one of the\nfollowing codes:\n0 - success\n1 - couldn''t reconcile histories so creature was cloned\n2 - moniker\nnot found in PRAY system\n3 - unused error code\n4 - internal / file format error\nSet actually_do_it\nto 1 to try and perform the import, or 0 to perform a query giving just the return value. You can\nuse the query to test if the creature is available, and if the creature would have to be cloned upon\nimporting, and warn the user. The new creature is TARGetted after import. If you set keep file to 1,\nthen the exported file won''t be deleted (moved to the porch). The creature will appear in the same\nplace that it was exported, but as with NEW: CREA, it will be in limbo, and won''t function until\nmoved to a valid place.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Ii][Nn][Jj][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This command injects an agent. The agent must be in the chunk named. If do_install is zero, the\ncommand simply checks for the presence of the required scripts and dependencies. If non-zero, it\nattempts to inject the agent. The report var is a string variable, and is set to the name of the\noffending script if the injection/check fails.\nReturn is 0 for success, -1 for "Script not found"\nand if injecting, -2 for "Injection failed".\nReturn value -3 indicates that a dependency evaluation\nfailed, and in this case, the report var is the return code from PRAY DEPS'
      set: [lvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Kk][Ii][Ll][Ll])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Deletes the resource file which contains the specified chunk. This is permanent and irreversible.\nReturns 1 if there was such a chunk and file, or 0 if there wasn''t.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Mm][Aa][Kk][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Please see the documentation accompanying the praybuilder on CDN\nSuffice it to say: return value is\nzero for success, otherwise non-zero, and report is set to the praybuilder output for you\nAlso, the\nwhich_journal_spot is zero for world journal, 1 for global journal. Also the which_pray_spot is zero\nfor "My Agents" and 1 for "My Creatures"'
      set: [lvalue,rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Aa][Yy])\s*([Nn][Ee][Xx][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This returns the name of the resource chunk directly after the named one, given that they are of\nthe same type. It loops when it reaches the end. If the named resource cannot be found in the list\nof resources of the type specified, then the last resource of that type is returned. This call pairs\nwith PRAY PREV. Compare PRAY FORE.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Pp][Rr][Aa][Yy])\s*([Pp][Rr][Ee][Vv])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This returns the name of the resource chunk directly before the named one, given that they are of\nthe same type. It loops when it reaches the end. If the named resource cannot be found in the list\nof resources of the type specified, then the first resource of that type is returned. This call\npairs with PRAY NEXT. Compare PRAY BACK.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Pp][Rr][Aa][Yy])\s*([Tt][Ee][Ss][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'This checks for the existence of a chunk, returning zero if it is not found, and a value from 1-3\nindicating the cost to load if it is.\nReturn values are currently defined as:\n0 - Chunk not\navailable at this time\n1 - Chunk Available, Cached and ready for use\n2 - Chunk available, on disk\nuncompressed and fine for loading\n3 - Chunk available, on disk compressed and ready for\nloading.\nThus the return value could be thought of as the cost of loading, where 1 is no cost, and 3\nis high cost.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Rr][Oo][Pp])\b)'
      comment: 'Returns the value of a CA in a room.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '([Pp][Rr][Tt][:])\s*([Ff][Rr][Mm][Aa])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the agent from which the input port is fed. Returns NULLHANDLE if that port does not exist,\nor is not connected.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.agent

    - match: '([Pp][Rr][Tt][:])\s*([Ff][Rr][Oo][Mm])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the output port index on the source agent, feeding that input port on the TARG\nagent.\nReturn values are -ve for error.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Tt][:])\s*([Ii][Tt][Oo][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the number of input ports, assuming they are indexed sequentially.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([Pp][Rr][Tt][:])\s*([Nn][Aa][Mm][Ee])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the name of the indexed port (input port if in_or_out is zero, output port if non-zero) on\nthe specified agent. Returns "" in error.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '([Pp][Rr][Tt][:])\s*([Oo][Tt][Oo][Tt])'
      captures:
        1: entity.name.function.caos.prefix
        2: entity.name.function.caos
      comment: 'Returns the number of output ports, assuming they are indexed sequentially.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Ss][Ww][Dd])\b)'
      comment: 'Returns the password for the specified world. If the world is not password protected the return\nvalue will be an empty string.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Pp][Tt][Xx][Tt])\b)'
      comment: 'Returns the string of the current text part. See the PTXT command for more information.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Pp][Uu][Hh][Ll])\b)'
      comment: 'Returns the x or y coordinate of the handle that target is picked up by for the given pose. x_or_y\nis 1 for x, 2 for y.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Uu][Pp][Tt])\b)'
      comment: 'Returns the x or y coordinate of the place where target picks agents up for the given pose. x_or_y\nis 1 for x, 2 for y.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Pp][Uu][Rr][Ee])\b)'
      comment: 'Returns whether default pointer behaviour is disabled or enabled. 1 if enabled, 0 if disabled.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Rr][Aa][Cc][Ee])\b)'
      comment: 'Returns the time in milliseconds which the last tick took overall. This differs from PACE in that\non fast machines it will have a minimum of 50 milliseconds. It accounts for all the time in the\ntick, including event handling and window processing.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Rr][Aa][Nn][Dd])\b)'
      comment: 'Returns a random integer between value1 and value2 inclusive of both values. You can use negative\nvalues, and have them either way round.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Rr][Aa][Tt][Ee])\b)'
      comment: 'Returns a string containing gain, loss and diffusion rates for that combination of room type and\nCA.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Rr][Ee][Aa][Dd])\b)'
      comment: 'Returns a string from the catalogue. This is used for localisation. offset 0 is the first string\nafter the TAG command in the catalogue file. See also REAN and WILD.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Rr][Ee][Aa][Nn])\b)'
      comment: 'Returns the number of entries in the catalogue for the given tag. For the same tag, you can READ\nvalues from 0 to one less than REAN returns.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Rr][Ee][Aa][Qq])\b)'
      comment: 'Returns 1 if the catalogue tag is present, 0 if not.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Rr][Ee][Ll][Xx])\b)'
      comment: 'Returns the relative X distance of the centre point of the second agent from the centre point of\nthe first.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Rr][Ee][Ll][Yy])\b)'
      comment: 'Returns the relative Y distance of the centre point of the second agent from the centre point of\nthe first.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Rr][Gg][Hh][Tt])\b)'
      comment: 'Returns the value of the right constant.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Rr][Ll][Oo][Cc])\b)'
      comment: 'Returns the location of the specified room as a string formatted as follows: xLeft xRight\nyLeftCeiling yRightCeiling yLeftFloor yRightFloor.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Rr][Mm][Ss][Cc])\b)'
      comment: 'Returns the name of the music track played at the room in the given location.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Rr][Nn][Gg][Ee])\b)'
      comment: 'Returns the target''s range. See ESEE, OBST.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Rr][Oo][Oo][Mm])\b)'
      comment: 'Returns the id of the room containing the midpoint of the specified agent.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Rr][Tt][Ii][Ff])\b)'
      comment: 'Takes a real world time, as returned by RTIM or HIST RTIM and converts it to a localised string for\ndisplay. The format string is made up of any text, with the following special codes:\n%a -\nAbbreviated weekday name\n%A - Full weekday name\n%b - Abbreviated month name\n%B - Full month name\n%c\n- Date and time representation appropriate for locale\n%d - Day of month as decimal number (01 -\n31)\n%H - Hour in 24-hour format (00 - 23)\n%I - Hour in 12-hour format (01 - 12)\n%j - Day of year as\ndecimal number (001 - 366)\n%m - Month as decimal number (01 - 12)\n%M - Minute as decimal number (00\n- 59)\n%p - Current locale’s AM/PM indicator for 12-hour clock\n%S - Second as decimal number (00 -\n59)\n%U - Week of year as decimal number, with Sunday as first day of week (00 - 53)\n%w - Weekday as\ndecimal number (0 - 6; Sunday is 0)\n%W - Week of year as decimal number, with Monday as first day of\nweek (00 - 53)\n%x - Date representation for current locale\n%X - Time representation for current\nlocale\n%y - Year without century, as decimal number (00 - 99)\n%Y - Year with century, as decimal\nnumber\n%z, %Z - Time-zone name or abbreviation; no characters if time zone is unknown\n%% - Percent\nsign\nThe # flag may prefix any formatting code, having the following meanings:\n%#a, %#A, %#b, %#B,\n%#p, %#X, %#z, %#Z, %#% # flag is ignored.\n%#c Long date and time representation, appropriate for\ncurrent locale. For example: Tuesday, March 14, 1995, 12:41:29.\n%#x Long date representation,\nappropriate to current locale. For example: Tuesday, March 14, 1995.\n%#d, %#H, %#I, %#j, %#m, %#M,\n%#S, %#U, %#w, %#W, %#y, %#Y Remove leading zeros (if any).\nYou probably want to READ any formatted\nstring you use from a catalogue file.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Rr][Tt][Ii][Mm])\b)'
      comment: 'Returns the current real world time. This is measured in seconds since midnight, 1 January 1970 in\nUTC. To display, use RTIF.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Rr][Tt][Yy][Pp])\b)'
      comment: 'Returns the type of a room, or -1 if not a valid room id.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Cc][Oo][Ll])\b)'
      comment: 'Set an AND and an EOR mask, to control the following scrolling functions:\n1 - Screen edge nudgy\nscrolling\n2 - Keyboard scrolling\n4 - Middle mouse button screen dragging\n8 - Mouse wheel screen\nscrolling\nThe byte strings is used for nudgy and keyboard scrolling. The defaults are [1 2 4 8 16 32\n64] and [0 1 2 4 8 16 32]. They represent the number of pixels scrolled each consecutive tick, as\nthe scrolling gets slower and faster.\nIf you use [] for a byte string, then the string won''t be\nchanged at all.'
      set: [rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Dd][Mm][Pp])\b)'
      comment: 'Get current sideways damping. The value is from 0.0 to 1.0 where 0.0 means no damping, 1.0\nmaximum.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ss][Ee][Aa][Nn])\b)'
      comment: 'Returns the season Number: 0..3. (Spring, Summer, Autumn,\nWinter)\n\t0=Spring\n\t1=SUmmer\n\t2=Autumn\n\t3=Winter'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Ee][Ee][Ee])\b)'
      comment: 'Returns 1 if the first agent can see the second, or 0 if it can''t. See ESEE.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Ee][Ee][Nn])\b)'
      comment: 'Returns the agent which the creature TARG has currently in mind for the category specified.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.agent

    - match: '([Ss][Ii][Nn][_])'
      comment: 'Returns sine of theta. Theta should be in degrees.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ss][Ii][Nn][Ss])\b)'
      comment: 'Looks for the search string as an exact substring of the main string (string in string). Starts\nsearching at the given index into the main string - to find the first occurence, set this to 1.\nString indices begin at 1. Returns the index of the position of the substring, if found, or -1\notherwise. The search is case sensitive - use UPPA and LOWA to convert all strings first, for a case\ninsensitive search.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Nn][Aa][Xx])\b)'
      comment: 'Returns 1 if the specified image file exists, or 0 if it doesn''t. Use with SNAP to find a unique\nfilename to use.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Oo][Rr][Cc])\b)'
      comment: 'Returns the source code for the specified script. Use the GIDS commands to find available scripts.'
      set: [rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ss][Oo][Rr][Qq])\b)'
      comment: 'Returns 1 if the script is in the scriptorium, or if there is a general event script for the entire\ngenus, or family. Returns 0 if there is no matching script.'
      set: [rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Oo][Uu][Ll])\b)'
      comment: 'Returns whether the creature faculty of the type specified is being processed or not.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Pp][Cc][Ss])\b)'
      comment: 'Returns the object’s species'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Pp][Ii][Nn])\b)'
      comment: 'Get current facing angle.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ss][Qq][Rr][Tt])\b)'
      comment: 'Calculates a square root.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ss][Tt][Oo][Ff])\b)'
      comment: 'Converts a string in decimal to a floating point number. Characters in the string after an initial\nnumber are quietly ignored. If there is no obvious number then zero is returned.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Ss][Tt][Oo][Ii])\b)'
      comment: 'Converts a string in decimal to an integer. Characters in the string after an initial number are\nquietly ignored. If there is no obvious number then zero is returned.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Tt][Rr][Ll])\b)'
      comment: 'Returns the length of a string.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ss][Uu][Bb][Ss])\b)'
      comment: 'Slices up a string, returning the substring starting at position start, with length count. String\nindices begin at 1.'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ss][Vv][Ee][Ll])\b)'
      comment: 'Get current sideways velocity.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Tt][Aa][Cc][Kk])\b)'
      comment: 'Returns the agent currently being DBG: TACKed.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Tt][Aa][Gg][Ee])\b)'
      comment: 'Returns the age in ticks since the target creature was BORN. Ticking stops when the creature dies -\nsee DEAD.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '([Tt][Aa][Nn][_])'
      comment: 'Returns tangent of theta. Theta should be in degrees. Watch out for those nasty discontinuities at\n90 and 270.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Tt][Aa][Rr][Gg])\b)'
      comment: 'the current object of script focus.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Tt][Cc][Oo][Rr])\b)'
      comment: 'Tests setting the bounding box of the physical core of the object TARG. May be set to smaller (or\nlarger) than the sprite''s rectangle. Returns 1 if OK to set (using CORE), 0 if not.'
      set: [rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Ii][Cc][Kk])\b)'
      comment: 'Gets ticks left in current timer.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Ii][Mm][Ee])\b)'
      comment: 'Returns the time of day. This can be\n0 - dawn\n1 - morning\n2 - afternoon\n3 - evening\n4 - night\nThe\nGAME variable engine_LengthOfDayInMinutes sets the day length. See also HIST TIME.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Ii][Nn][Tt])\b)'
      comment: 'Returns a tint value for an agent - currently it works only on Skeletal Creatures. Attribute can\nbe:\n1 - Red\n2 - Green\n3 - Blue\n4 - Rotation\n5 - Swap'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Mm][Vv][Bb])\b)'
      comment: 'Similar to TMVT only tests a MVBY.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Mm][Vv][Ff])\b)'
      comment: 'Test if a creature could move it''s down foot to position x,y.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Mm][Vv][Tt])\b)'
      comment: 'Test if target can move to the given location and still lie validly within the room system. Returns\n1 if it can, 0 if it can''t.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Oo][Rr][Xx])\b)'
      comment: 'Returns relative X position of the centre of the given room from target''s top left corner.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Tt][Oo][Rr][Yy])\b)'
      comment: 'Returns relative Y position of the centre of the given room from target''s top left corner.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Tt][Oo][Tt][Ll])\b)'
      comment: 'Returns the number of objects in the world who fit this specifier'
      set: [rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Oo][Uu][Cc])\b)'
      comment: 'Returns 1 if these two objects are in contact.\n@example: #{doif touc targ ownr gt 0} - DOIF [TARG]\nand [OWNR] are touching'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Rr][Aa][Nn])\b)'
      comment: 'Returns true if the given x y position coincides with a non transparent pixel on the TARG agent.\nThis does not work for creatures.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Tt][Rr][Cc][Kk])\b)'
      comment: 'Returns the agent being tracked by the camera, if any.'
      pop: true
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Tt][Ww][Ii][Nn])\b)'
      comment: 'Clones an agent, and returns the replica. If agent_null is set to 1 the agents that this agent\npoints to (in OVxx, or VAxx in its running script) are set to NULL in the clone. If agent_null is 0,\nthen the clone points to the same agents as the original. When using agent_null 1, you might want to\ncall STPT first so variables being used mid-script aren''t cleared under the agent''s nose.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.agent

    - match: '(\b([Tt][Yy][Pp][Ee])\b)'
      comment: 'Determines the type of a variable. The type is one of the following:\n0 - integer\n1 -\nfloating-point\n2 - string\n3 - simple agent\n4 - pointer agent\n5 - compound agent\n6 - vehicle\n7 -\ncreature\nERROR codes for agents:\n-1 - NULL agent handle\n-2 - Unknown agent - you should never get\nthis'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Uu][Ff][Oo][Ss])\b)'
      comment: 'This returns the equivalent of "uname -a" on compatible systems, or a description of your operating\nsystem on others. This is a descriptive string and should not be taken as fixed format, or\nparsable.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Uu][Ff][Tt][Xx])\b)'
      comment: 'Returns X coordinate of creature''s up foot.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Uu][Ff][Tt][Yy])\b)'
      comment: 'Returns Y coordinate of creature''s up foot.'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Uu][Nn][Cc][Ss])\b)'
      comment: 'Returns 1 if the creature is unconscious, 0 otherwise.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Uu][Nn][Ii][Dd])\b)'
      comment: 'Returns unique identifier for target agent. AGNT goes the opposite way. NOTE: This should only be\nused for external programs to persistently refer to an agent. Variables can use SETA to store agent\nr-values directly for internal use.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Uu][Pp][Pp][Aa])\b)'
      comment: 'Converts the given string into all upper case letters.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Vv][Aa][Rr][Cc])\b)'
      comment: '[not implemented yet]'
      pop: true
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Vv][Aa][0-9][0-9])\b)'
      comment: 'VA00 to VA99 are local variables, whose values are lost when the current script ends.\n@range(0 to\n99)'
      scope: variable.other.member.caos
      pop: true

    - match: '(\b([Vv][Ee][Cc][Xx])\b)'
      comment: 'Returns a normalised vector for the given angle (X coordinate).'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Vv][Ee][Cc][Yy])\b)'
      comment: 'Returns a normalised vector for the given angle (Y coordinate).'
      set: [rvalue]
      scope: variable.function.caos.rvalue.float

    - match: '(\b([Vv][Ee][Ll][Xx])\b)'
      comment: 'Horizontal velocity in pixels per tick - floating point.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Vv][Ee][Ll][Yy])\b)'
      comment: 'Vertical velocity in pixels per tick - floating point.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Vv][Ii][Ss][Ii])\b)'
      comment: 'Checks if the agent, or any of its parts, is on screen and returns 1 if it is or 0 if it is not.\nSet to 0 to check if the agent is on the main camera. Set to 1 to check if the agent is on the main\ncamera or any remote cameras'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Vv][Mm][Jj][Rr])\b)'
      comment: 'Returns the major version number of the engine.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Vv][Mm][Nn][Rr])\b)'
      comment: 'Returns the minor version number of the engine.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Vv][Oo][Ii][Ss])\b)'
      comment: 'This returns the voice name for the TARG agent. (Unless it has been serialised in :( In which case\nit returns "Lozenged" if the agent had a voice before the save, or "" as normal if the agent can''t\nspeak.)'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Vv][Oo][Ll][Mm])\b)'
      comment: 'Returns the overall the volume of the sound effects (channel 0), the MIDI (channel 1) or the\ngenerated music (channel 2). Values range from -10000 (silent) to 0 (loudest). Currently not\nsupported for MIDI.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Vv][Tt][Oo][Ss])\b)'
      comment: 'Converts an integer or float into a string in decimal.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ww][Aa][Ll][Ll])\b)'
      comment: 'WALL last collided with. 0 = left, 1 = right, 2 = up, 3 = down, 4 = unknown.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Dd][Oo][Ww])\b)'
      comment: 'Returns 1 if in full screen mode, or 0 if in windowed mode.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Dd][Tt][Hh])\b)'
      comment: 'Returns objects width'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Ii][Ll][Dd])\b)'
      comment: 'Searches for a catalogue tag based on the given classifier, and returns the string at the given\noffset. See also READ. As an example, with a tag_stub of "Agent Help" and a classifier 3 7 11 it\nwould first look for the tag "Agent Help 3 7 11". If that wasn''t present, it would go through the\nwildcards, eventually trying "Agent Help 0 0 0", and throwing an error if even that isn''t there.'
      set: [rvalue,rvalue,rvalue,rvalue,rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ww][Nn][Aa][Mm])\b)'
      comment: 'Returns the name of the currently loaded world.'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ww][Nn][Dd][Bb])\b)'
      comment: 'Returns world coordinates of bottom of current camera window.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Nn][Dd][Hh])\b)'
      comment: 'Returns height of current camera window.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Nn][Dd][Ll])\b)'
      comment: 'Returns world coordinates of left of current camera window.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Nn][Dd][Rr])\b)'
      comment: 'Returns world coordinates of right of current camera window.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Nn][Dd][Tt])\b)'
      comment: 'Returns world coordinates of top of current camera window.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Nn][Dd][Ww])\b)'
      comment: 'Returns width of current camera window.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Nn][Tt][Ii])\b)'
      comment: 'This returns the index of the world. If you pass in a world name which is not within the system, -1\nis returned.'
      set: [rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Oo][Ll][Ff])\b)'
      comment: 'Provides various functions to distort space-time and otherwise help with wolfing runs. Set an AND\nand an EOR mask, to control the following bits:\n1 - Display rendering. Turning it off speeds the\ngame up.\n2 - Fastest ticks. The game usually runs at a maximum of 20 frames per second. If this is\nset, it instead runs as fast as it can.\n4 - Refresh display at end of tick. If set, then the display\nis updated at the end of the tick, and the flag is cleared.\n8 - Autokill. If set, agents which\ngenerate run errors are automatically killed, as the command line option.'
      set: [rvalue,rvalue]
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Pp][Aa][Uu])\b)'
      comment: 'Returns 1 if world ticks are paused, or 0 otherwise.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Rr][Ll][Dd])\b)'
      comment: 'Returns the name of the world specified by world_index which must be in the range 0 to (NWLD-1).'
      set: [rvalue]
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Ww][Tt][Ii][Kk])\b)'
      comment: 'Returns the number of ticks since the world was first made. For debugging purposes only you can\nchange this value with DBG: WTIK.'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Ww][Uu][Ii][Dd])\b)'
      comment: 'Returns the unique identifier of the currently loaded world.\n'
      pop: true
      scope: variable.function.caos.rvalue.string.quoted

    - match: '(\b([Yy][Ee][Aa][Rr])\b)'
      comment: 'Returns the current year in Albia. Starting with 0000 AD (first chronicled year After Disaster)'
      pop: true
      scope: variable.function.caos.rvalue.integer

    - match: '(\b([Zz][Oo][Mm][Bb])\b)'
      comment: 'Returns 1 if the creature is zombified (has its brain to motor link severed), 0 otherwise.'
      pop: true
      scope: variable.function.caos.rvalue.integer
    - match: '\s+'
      scope: text

    - match: '\b([^ ]+)\b'
      scope: invalid.illegal.caos
      pop: true


  token:
    - match: '\s*\*.*$'
      scope: comment.line.caos

    - match: '\b([^"'']+)\b'
      scope: entity.name.function.caos
      pop: true

    - match: '(\"(^\"|\")*\"|''([^'']|\\'')*'')'
      scope: invalid.illegal
      pop: true

  char:
    - meta_scope: constant.character.caos

    - match: '(\\.)([''])'
      pop: true
      captures:
        1: constant.character.escape.caos
        2: punctuation.definition.character.end.caos

    - match: '([^\\''])('')'
      pop: true
      captures:
        1: constant.character.caos
        2: punctuation.definition.character.end.caos

    - match: ''''
      pop: true
      scope: punctuation.definition.character.end.caos

    - match: '[^''][^'']+|\\'
      scope: invalid.illegal.caos
      pop: true

  double_quoted_string:
    - meta_scope: string.quoted.double

    - match: '\\.'
      scope: constant.character.escape.caos

    - match: '[^"]'
      scope: string.quoted.double

    - match: '"'
      pop: true
      scope: punctuation.definition.string.end.caos


  eqOp:
    - match: '\b[Ee][Qq]\b|='
      scope:  keyword.control.conditional.caos
      pop: true
      comment: "Equal"

    - match: '\b[Nn][Ee]\b|!=|<>'
      scope:  keyword.control.conditional.caos
      pop: true
      comment: Not Equal

    - match: '\b[Gg][Ee]\b|>='
      scope:  keyword.control.conditional.caos
      pop: true
      comment: Greate Than/Equal

    - match: '\b[Gg][Tt]\b|>'
      scope:  keyword.control.conditional.caos
      pop: true
      comment: Greater Than

    - match: '\b[Ll][Ee]\b|<='
      scope:  keyword.control.conditional.caos
      pop: true
      comment: Less Than/Equal

    - match: '\b[Ll][Tt]\b|<'
      scope:  keyword.control.conditional.caos
      pop: true
      comment: Less Than


    - match: '\b[Bb][Tt]\b'
      scope:  keyword.control.conditional.caos
      pop: true
      comment: Bitwise AND

    - match: '\b[Bb][Ff]\b'
      scope:  keyword.control.conditional.caos
      pop: true
      comment: Bitwise NAND or Bitwise And == False

    - match: '\b([^ ]+)\b'
      scope: invalid.illegal.caos
      pop: true
